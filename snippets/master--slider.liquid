<!-- snippets/master--slider -->

{% liquid 

    assign s                    = section.settings

    assign s_id                 = section.id

    assign hght_fallback        = '500px'
    assign site_max_width         = 1400 | append: 'px'

    assign mob_relative          = s.mob_rel
    assign use_bg_img             = s.set_height
    assign mob_ov_sooner          = s.show_mobile_overlay_sooner

    assign auto_slide            = s.auto_slide
    assign use_arrows            = s.use_arrows
    assign use_dots              = s.use_dots
    
    assign section_custom_css     = s.custom_css
    assign class                = 'section--' | append: s_id
    assign css_class            = '.' | append: class

    assign dsk_height              = s.image_height | default: hght_fallback
    if dsk_height contains '%'
        assign dsk_height          = dsk_height | replace: '%','vw'
        assign dsk_img_height       = 'padding-top:' | append: dsk_height | append: ';height: 0;min-height: 0;'
    else
        assign dsk_img_height       = 'min-height:' | append: dsk_height | append: ';'
    endif

    assign mob_height              = s.image_height_mob | default: dsk_height
    if mob_height contains '%'
        assign mob_height          = mob_height | replace: '%','vw'
        assign mob_img_height       = 'padding-top:' | append: mob_height | append: ';height: 0;min-height: 0;'
    else
        assign mob_img_height       = 'min-height:' | append: mob_height | append: ';'
    endif

    assign modal                = ''

    assign full_width           = s.full_width
%}

{% for block in section.blocks %}

    {% liquid 

        assign b                = block.settings

        assign use_slide         = b.show_image

        assign block_custom_css   = b.custom_css
        assign slide_id          = 'image--' | append: block.id
        assign slide_class         = '.' | append: slide_id

        assign top_stars         = b.stars | plus: 0 

        assign ttl              = b.title
        assign makeh1           = b.make_h1
        assign ttl_clr           = b.title_color
        assign ttl_sze           = b.font_size_title

        assign sub_ttl           = b.subtitle
        assign sub_ttl_clr        = b.subtitle_color
        assign sub_ttl_sze        = b.font_size_subtitle

        assign txt              = b.text
        assign txt_clr           = b.text_color
        assign txt_sze           = b.font_size_text
        assign btn_txt_sze        = b.btn_size_text
        assign btn_url          = b.btn_url
        assign btn_txt          = b.btn_txt
        assign btn_url2         = b.btn_url2
        assign btn_txt2         = b.btn_txt2
        assign use_btn          = false
        assign use_btn2         = false
        assign btn_style         = b.btn_style
        assign btn_style2        = b.btn_style2


        if btn_url != blank and btn_txt != blank
            assign use_btn      = true
        endif
        if btn_url2 != blank and btn_txt2 != blank
            assign use_btn2      = true
        endif

        assign img_main          = b.image
        assign img_mob           = b.image_mob
        assign icn_img           = b.icon

        assign use_cf            = false 
        if b.metafield_image != blank 
          assign img_main        = b.metafield_image
          assign use_cf          = true
          if b.metafield_image_alt != blank 
          assign img_main_alt        = b.metafield_image_alt
          endif  
        endif 

        assign vid_embd          = b.video_url
        assign vid_host          = b.video_hosted
        assign hosted_thumb      = b.video_hosted_thumbnail
        assign vid_host_mob       = b.video_hosted_mobile
        assign hosted_thumb_mob   = b.video_hosted_thumbnail_mobile
        assign vid_ratio         = blank
        assign vid_ratio_mob      = blank
        assign video_autoplay    = b.video_autoplay

        if b.video_ratio != blank 
            assign base_num      = 0.00
            assign vid_num       = base_num | plus: b.video_ratio
            assign vid_ratio     = vid_num | divided_by: 100
        endif

        if b.video_ratio_mobile != blank 
            assign base_num_mob   = 0.00
            assign vid_num_mob    = base_num_mob | plus: b.video_ratio_mobile
            assign vid_ratio_mob  = vid_num_mob | divided_by: 100
        else
            assign vid_ratio_mob  = vid_ratio
        endif

        assign v_modal          = b.video_modal 
        assign v_modal_btn      = b.btn_txt_modal | default: 'Watch Video'

        assign bg_color          = b.bg_color
        assign op               = b.opacity | times: 0.01
        assign bg_color          = bg_color | color_modify: 'alpha', op
        assign bg_color_mob       = bg_color

        assign op_mob            = b.opacity_mob
        if op_mob != '0'
            assign bg_color_mob   = b.bg_color_mob
            assign op_mob        = op_mob | times: 0.01
            assign bg_color_mob   = bg_color_mob | color_modify: 'alpha', op_mob
        endif

        assign txt_algn          = b.align_text
        assign txt_wdth          = b.width
        assign cont_algn         = b.align_hor

        assign vert             = b.vert_align
        assign hor              = b.hor_align
        if cont_algn != 'right'
            assign alignment    = 'left: ' | append: hor | append: '%; transform: translate(-' | append: hor | append: '%,-' | append: vert | append: '%); top: ' | append: vert | append: '%;'
        elsif cont_algn == 'right'
            assign alignment    = 'left: initial; right:'  | append: hor | append: '%; transform: translate(' | append: hor | append: '%,-' | append: vert | append: '%); top:' | append: vert | append: '%;'
        endif

        assign pos_type          = 'object-position: '
        if use_bg_img
            assign pos_type      = 'background-position: '
        endif 

        assign position         = pos_type | append: b.align_bg | append: ';'
        assign mob_position      = '' 
        if img_mob != blank
            assign mob_position  = pos_type | append: b.align_bg_mob | append: ';'
        endif

        # if img_main == blank 
        #   assign use_slide       = false
        # endif 

    %}

    

    {% capture block_css %}
        /* Slide Defaults */
        {{slide_class}} {
            position: relative;
            overflow: hidden;
            z-index: 1;
            vertical-align: bottom;
        }
        /* Overlay */
        {{slide_class}} .overlay {
            background: {{bg_color}};
            display: block;
            position: absolute;
            top:0;
            left:0;
            width: 100%;
            height: 100%;
            z-index: 1;
        }
        {% if op_mob != '0' %}
            {% if mob_ov_sooner %}/medium-down/{% else %}/small/{% endif %} {
                {{slide_class}} .overlay {
                    background: {{bg_color_mob}};
                }
            }
        {% endif %}

        /* Content Position */
        {{slide_class}} .center-content {
            position: absolute;
            text-align: {{txt_algn}};
            max-width: {{txt_wdth}};
            margin: 0 auto;
            width:95%;
            z-index: 2;
            {{alignment}}
            font-family: var(--font-heading-family);
        }
        {% if full_width %}
            .full-width .center-content {
                width: 100%;
                padding-left: calc(var(--grid-gutter) * 0.5);
                padding-right: calc(var(--grid-gutter) * 0.5);
            }
        {% endif %}
        {{slide_class}} .but-div {
            display: flex;
            gap: 2em;
        }

        {% if mob_ov_sooner %}/medium-down/{% else %}/small/{% endif %} {

            {{slide_class}} .center-content {
                width: 100%;
                // text-align: center;
                {% if mob_relative == true %}
                    position: relative;
                    top: initial;
                    left: initial;
                    right: initial;
                    bottom: initial;
                    transform: none;
                    padding: 2em 0;
                    margin: 0 auto;
                {% else %}
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%,-50%);

                {% endif %}
            }

            .slick-dotted {{slide_class}} .center-content {
                max-width: calc(100% - 120px);
            }
            {% if mob_relative == true %}
            {{slide_class}} .page-width {
                position: relative;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                transform: none;
                margin: 0 auto;
            }
            {% endif %}
        }

        /* Text Sizing */

        {{slide_class}} .icon-star {
          display: inline-block;
          width: 15px;
          height: 15px;
          margin-right: 2px;
          color: var(--color--candlelight-yellow);
        }
        {{slide_class}} .h2,
        {{slide_class}} h2 {
            margin-top: 0;
            margin-bottom: 0;
            font-size: {{ttl_sze}}px;
            font-weight: 500;
            color: {{ttl_clr}};
            // line-height: 1;
            font-family: var(--font-heading-family);
            // text-transform: uppercase;
        }
        {{slide_class}} h3 {
            margin-top: 0;
            margin-bottom: 0;
            font-size: {{sub_ttl_sze}}px;
            font-weight: 500;
            color: {{sub_ttl_clr}};
            line-height: 1.1;
            /*font-family: var(--font-body-family);*/
            font-family: var(--font-heading-family);
            font-style: italic;
        }
        {{slide_class}} .rte {
            margin-top: 0;
            margin-bottom: 0;
            /*font-family: var(--font-heading-family);*/
            
        }
        {{slide_class}} .rte,
        {{slide_class}} .rte * {
            font-size: {{txt_sze}}px;
            color: {{txt_clr}};
        }
        {{slide_class}} .btn {
            <!-- font-size: 17px; -->
        }
        {{slide_class}} .center-content .rte > * {
            margin: 0;
        }
        {{slide_class}} .center-content .rte > *:not(:last-child),
        {{slide_class}} .center-content > *:not(:last-child) {
            margin-bottom: var(--base-gutter--half);
        }
        == .btn-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            align-items: center;
            width: calc(100% + var(--base-gutter));
            margin-bottom: calc(var(--base-gutter) * -1) !important;
            margin-left: calc(var(--base-gutter) * -1) !important;
        }

        == .btn-container .button {
            margin-bottom:  var(--base-gutter);
            margin-left:  var(--base-gutter);
        }
        == .btn-container .button:not(:only-child) {
            flex: 1 1;
            min-width: 150px;
            max-width: 300px;
        }

        {% if btn_style contains 'custom' %}
            {{slide_class}} .btn {
                background: {{b.color_button|default:'rgba(0,0,0,0)'}} ;
                border-color: {{b.color_button_border|default:'rgba(0,0,0,0)'}} ;
                color: {{b.color_button_text|default:'rgba(0,0,0,0)'}} ;
                font-size: {{btn_txt_sze}}px;
            }
            {{slide_class}} .btn:hover {
                background: {{b.color_button_hover|default:'rgba(0,0,0,0)'}} ;
                border-color: {{b.color_button_border_hover|default:'rgba(0,0,0,0)'}} ;
                color: {{b.color_button_text_hover|default:'rgba(0,0,0,0)'}} ;
            }
            {{slide_class}} .underlined-link::after {
                background: {{b.color_button_border|default:'rgba(0,0,0,0)'}} ;
            }
            @media only screen and (min-width: 750px) {
                .rich-text:not(.rich-text--full-width) .rich-text__wrapper {
                    width: calc(100% - 21rem / var(--font-body-scale));
                }
            }
            .template--index #MainContent>*:not(#shopify-section-template--15281807065206__custom_liquid_jzJyUM):nth-child(2) {
                bottom: 45vh !important;
            }
            .rich-text__buttons {
            gap: 2em;
            }
            .rich-text__heading,
            .button {
            color: #fff;
            }
            .button {
            font-size: 2rem;
            background-color: transparent;
            padding: 0;
            justify-content: flex-start;
            flex-grow: 0;
            min-width: unset;
            min-height: 1.5em
            }
            .button::before,
            .button::after {
            box-shadow: none;
            }
            {% comment %}
            .button::after {
            content: "";
            border-bottom: 1px solid #fff !important;
            }
            {% endcomment %}
            .button:not([disabled]):hover::after {
            box-shadow: none;
            border-bottom-width: 2px !important;
            }
            #shopify-section-template--15267871654006__custom_liquid_jzJyUM {
                top: 60vh;
            }
        {% endif %}
        {% if btn_style contains 'custom' and b.btn_custom_inline != false %}
            .but-div {
                display: inline-flex;
                gap: 2em;
            }
            {{slide_class}} .btn {
                background-color: transparent;
                padding: 0;
                min-width: unset;
                min-height: 1.5em;
                border-left: none;
                border-right: none;
                border-top: none;
                border-bottom: none;
            }
            {{slide_class}} .btn:after {
                border-bottom: 1px solid {{b.color_button_border|default:'rgba(0,0,0,0)'}} ;
                box-shadow: none;
            }
            {{slide_class}} .btn:hover:after {
                border-bottom: 2px solid {{b.color_button_border|default:'rgba(0,0,0,0)'}} ;
                box-shadow: none;
            }
        {% endif %}
        {% if mob_ov_sooner %}/medium-down/{% else %}/small/{% endif %} {
                {{slide_class}} .h2,
                {{slide_class}} h2 {
                    font-size: 32px;
                }
                {{slide_class}} h3 {
                    font-size: 20px;
                }
                {{slide_class}} .rte,
                {{slide_class}} .rte * {
                    font-size: 16px;
                }
                // {{slide_class}} .btn {
                //     font-size: 15px;
                // }
                {{slide_class}} .center-content .rte > *:not(:last-child),
                {{slide_class}} .center-content > *:not(:last-child) {
                    margin-bottom: var(--base-gutter--quarter);
                }
            }

        /* Image Position */
        {{slide_class}} .bg_image,
        {{slide_class}} img {
            {{position}}
        }
        {% if img_mob != blank %}
            {% if mob_ov_sooner %}/medium-down/{% else %}/small/{% endif %} {
                {{slide_class}} .bg_image,
                {{slide_class}} img {
                    {{mob_position}}
                }
            }
        {% endif %}


        /* Slide Height */
        {% if use_bg_img == true %}
            {{slide_class}} {
                {{dsk_img_height}}
                {{position}}
            }
           

            {% if mob_height != 0 %}
                    {% if mob_ov_sooner %}/medium-down/{% else %}/small/{% endif %} {
                        {{slide_class}}  {
                            {{mob_img_height}}
                        }
                    }
                {% unless mob_height contains 'vw' %}
                {% endunless %}
            {% endif %}
            {% if mob_relative == true %}
                {% if mob_ov_sooner %}/medium-down/{% else %}/small/{% endif %} {
                    {{slide_class}}  {
                        height: auto;
                        min-height: 100%;
                        {% if mob_height contains 'vw' %}
                        padding-top: 0;
                        {% endif %}
                    }
                    {{slide_class}} .h2,
                    {{slide_class}} h2,
                    {{slide_class}} h3,
                    {{slide_class}} .rte * {
                        color: {{ settings.color_primary_body_text }};
                    }
                }
            {% endif %}
        {% endif %}
    {% endcapture %}

    {% liquid
      if makeh1 == true 
        assign block_css       = block_css | replace: ' h2',' .h2'
        assign block_custom_css = block_custom_css | replace: ' h2',' .h2'
      endif
    %}

    {% capture video %}
        {% assign norm_mob = false %}
        {% if img_main == blank and img_mob == blank  %}
            {% assign norm_mob = true %}
        {% endif %}
        {% render 'snippet--video', 
            vidExt: vid_embd, 
            vidHosted: vid_host, 
            hostedThumb: hosted_thumb,
            vidClass: sectionClass, 
            normalMobile: norm_mob,
            useBG: use_bg_img,
            videoRatio: vid_ratio,
            hideMobile: 'small--hide',
            autoPlay: video_autoplay
        %}
        <!-- Mobile Video (if different from desktop) -->
        {% if vid_host_mob != blank and vid_host_mob != vid_host %}
            {% render 'snippet--video', 
                vidExt: blank, 
                vidHosted: vid_host_mob, 
                hostedThumb: hosted_thumb_mob,
                vidClass: sectionClass, 
                normalMobile: norm_mob,
                useBG: use_bg_img,
                videoRatio: vid_ratio_mob,
                hideMobile: 'medium-up--hide',
                autoPlay: video_autoplay
            %}
        {% endif %}
    {% endcapture %}


    {% capture img %}
        {% capture img_cls %}{% if img_mob != blank or mob_relative == true %}{% if mob_ov_sooner %}medium-down{% else %}small{% endif %}--hide{% endif %}{% endcapture %}
        {% capture mob_img_cls %}{% if mob_ov_sooner %}large-up{% else %}medium-up{% endif %}--hide{% endcapture %}
        {% render 'snippet--image', 
            img: img_main,
            alt: img_main_alt, 
            class: img_cls,
            cf: use_cf,
            useBG: use_bg_img 
        %}
        {% if img_mob != blank and mob_relative == false %}
            {% render 'snippet--image', 
                img: img_mob, 
                class: mob_img_cls,
                useBG: use_bg_img 
            %}
        {% endif %}
        {% if mob_relative == true %}
            {% assign rel_img_mob = img_main %}
            {% if img_mob != blank %}
                {% assign rel_img_mob = img_mob %}
            {% endif %}
            {% render 'snippet--image', 
                img: rel_img_mob, 
                class: mob_img_cls,
                useBG: false 
            %}
        {% endif %}
    {% endcapture %}
    
    {% if v_modal != blank %}
        {% capture modal %}
            {{modal}}
            <div class="basic-modal video-modal" id="video_{{ forloop.index }}">
                <div data-close="video_{{ forloop.index }}" class="bg_close"></div>

                <div class="modal-inner">
                    <span data-close="video_{{ forloop.index }}" class="close-modal">
                        <span class="visually-hidden">Close</span>
                        {% render 'icon-close' %}
                    </span>
                    <div class="video-ratio for-modal">
                        {% if v_modal.type == "youtube" %}
                            <iframe class="modal_video" src="https://www.youtube.com/embed/{{ v_modal.id }}?rel=0&showinfo=0&vq=720" width="800" height="480" frameborder="0" allowfullscreen></iframe>
                        {% endif %}
                        {% if v_modal.type == "vimeo" %}
                            <iframe class="modal_video" src="//player.vimeo.com/video/{{ v_modal.id }}?byline=0&portrait=0&badge=0" width="800" height="480" frameborder="0" allowfullscreen></iframe>
                        {% endif %}
                    </div>
                </div>
            </div>
        {% endcapture %}
    {% endif %}

    {% if use_slide == true %}
      {% capture slides %}
        {{slides}}
        <div class=" slide-image {% if v_type != blank %}{{v_type}}{% endif %} {{slide_id}}" title="{{ ttl | strip_html | strip | strip_newlines | escape  }}" data-index="{{forloop.index}}" {{ block.shopify_attributes }}>

            <div class="overlay {% if mob_relative == true %}{% if mob_ov_sooner %}medium-down{% else %}small{% endif %}--hide{% endif %}"></div>

            {{video}}

            {{img}}


            {% if use_btn == false and btn_url != blank %}
                <a class="overlay-link" href="{{btn_url}}">
                    <span class="visually-hidden">{{ttl}}</span>
                </a>
            {% endif %}

            <div class="page-width {% if full_width == true %}full-width{% endif %}">
                {% if 
                    use_btn == true or 
                    ttl != blank or 
                    sub_ttl != blank or
                    txt != blank 
                %}
                    <div class="center-content {{ cont_algn }}">
                        {% render 'snippet--image', 
                            img: icn_img, 
                            useBG: false,
                            customStyle: 'max-width: 100px;display: inline-block;width: 100%;margin-bottom: 15px;'
                        %}
                        {% if top_stars > 0 %}
                            <div class="stars">
                                {% for i in (1..top_stars) %}
                                    {% render 'icon-star' %}
                                {% endfor %}
                            </div>
                        {% endif %}

                        {% if sub_ttl != blank %}
                            <h3 class="sec_h_font">{{ sub_ttl }}</h3>
                        {% endif %}
                        
                        {% if ttl != blank %}
                            {% if makeh1 %}
                                <h1 class="h2">{{ ttl }}</h1>
                            {% else %}
                                <h2 class="h2">{{ ttl }}</h2>
                            {% endif %}
                        {% endif %}
                        
                        {% if txt != blank %}
                            <div class="rte">{% if s.leaf == true %} {% render 'icon-leaf'%} {%endif%} {{ txt }}{% if s.leaf == true %} {% render 'icon-leaf'%} {%endif%}</div>
                        {% endif %}
                        
                        <div class="but-div card__link-underline-wrapper">
                        {% if use_btn == true %}
                            <a class="button--{{btn_style}} underlined-link white" href="{{ btn_url }}">{{ btn_txt }}</a>
                        {% endif %}
                        {% if use_btn2 == true %}
                            <a class="btn button button--{{btn_style2}}" href="{{ btn_url2 }}">{{ btn_txt2 }}</a>
                        {% endif %}
                        </div>
                        
                        {% if v_modal != blank %}
                            <a class="btn button button--secondary secondary open-modal" data-open="video_{{ forloop.index }}" href="#">
                                <span>{% render 'icon-play' %}</span>
                                <span>{{v_modal_btn}}</span>
                            </a>
                        {% endif %}
                    </div>
                {% endif %}
            </div>

            {% render 'custom-css', 
                css: block_css, 
                class: slide_class,
                important: false
            %}

            {% render 'custom-css', 
                css: block_custom_css, 
                class: slide_class 
            %}

        </div>
      {% endcapture %}
    {% endif %}
{% endfor %}

{% if slides != '' %}

  <style>
  {% capture section_css %}
      == {
          overflow: hidden;
          position: relative;
          z-index: 1;
          margin: 0;
      }
      {% if use_bg_img == true %}
      {% unless dsk_height contains 'vw' %}
      == {
          {{dsk_img_height}}
      }
      {% endunless %}
      {% if mob_height != 0 %}
      {% unless mob_height contains 'vw' %}
      /small/ {
          == {
              {{mob_img_height}}
          }
      }

      {% endunless %}
      
      {% endif %}
      {% if mob_relative == true %}
      /small/ {
          == {
              height: auto;
              min-height: 100%;
          }
      }
      {% endif %}
      == .bg_image {
          position: absolute;
          top: 0;
          left:0;
          height: 100%;
          width: 100%;
          z-index: -1;
          background-repeat: no-repeat;
          background-size: cover;
      }
      == .page-width {
          position: absolute;
          top: 50%;
          left: 50%;
          {% if full_width == true %}
          width: 100%;
          padding-left: calc(var(--grid-gutter) * 0.5);
          padding-right: calc(var(--grid-gutter) * 0.5);
          {% else %}
          width: calc(100% - 7rem / var(--font-body-scale));
          max-width: {{site_max_width}};
          {% endif %}
          transform: translate(-50%,-50%);
          z-index: 2;
      }
      {% else %}
      == img {
          width: 100%;
      }
      {% endif %}

      /* Prevent video flash on mobile - hide videos initially */
      == .video-ratio {
          opacity: 0;
          transition: opacity 0.1s ease-in;
      }
      == .video-ratio.loaded {
          opacity: 1;
      }
      
      /* Hide wrong videos on each device */
      /medium-up/ {
          == .video-ratio.medium-up--hide {
              display: none !important;
          }
      }
      /small/ {
          == .video-ratio.small--hide {
              display: none !important;
          }
      }

      /* Other CSS */
      == .slick-slider {
          overflow: hidden;
      }
      == slick-track,
      == .overlay-link {
          position: absolute;
          top: 0;
          left:0;
          height: 100%;
          width: 100%;
          z-index: 99999;
      }
      ==.slick-dotted.slick-slider {
          margin-bottom: 0;
      }
      == .slick-dots {
          bottom: 15px;
      }
      == .slick-dots li {
          margin: 0 7px;
      }
      == .slick-prev {
          left: 0px;
      } 
      == .slick-next {
          right: 0px;
      }
      == .slick-prev, 
      == .slick-next {
          width: 75px;
          height: 75px;
          top: 50%;
          background: transparent;
          border-color: transparent;
          /*-webkit-filter: drop-shadow(0px 0px 6px black);*/
          /*filter: drop-shadow(0px 0px 6px black);*/
          z-index: 1;
      }
      == .slick-prev::before, 
      == .slick-next::before {
          background-color: {{section.settings.arrow_background_color}};
      }
      /small/ {
          == .slick-prev, 
          == .slick-next {
              top: initial;
              bottom: 15%;
              transform: translate(0,15%);
          }
      }
      {% if mob_relative == true %}
          /small/ {
              == .slick-list, 
              == .slick-track {
                  position: relative;
                  top: initial;
                  left: initial;
                  height: auto;
              }
          }
      {% endif %}

      == .page-width {
          height: 100%;
      }
      == > .slide-image:not(:first-of-type) {
          opacity: 0;
          display: none;
      }
      == .video-inline {
          position: relative;
          width:100%;
          padding-top: 56.6%;
      }
      /*== .video-ratio,*/
      == .video-ratio video,
      == .video-ratio iframe,
      == .video-inline video,
      == .video-inline iframe {
          width: 100%;
          height: 100%;
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%,-50%);
          object-fit: cover;
          min-width: 100%;
          min-height: 100%;
      }
      == .video-inline + noscript + .image-content__image-container,
      == .video-ratio:not(.for-modal) {
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          position: absolute;
          top:50%;
          left:50%;
          transform: translate(-50%,-50%);
          z-index: 0;
      }
      == .video-inline + noscript + .image-content__image-container {
          z-index: -1;
      }
      == .video-inline + noscript + .image-content__image-container img {
          height: 100%;
          object-fit: cover;
      }

      == .video-ratio:not(.for-modal):before {
          content: '';
          position: absolute;
          top:0;
          left:0;
          width:100%;
          height:100%;
          z-index: 1;
      }
      == .video-ratio:not(.for-modal) .full-width {
          width: 100%;
          height: 100%;
          position: absolute;
          top:50%;
          left:50%;
          transform: translate(-50%,-50%);
      }
      == .open-modal svg {
          width: 15px;
          height: 15px;
          margin-right: 10px;
      }

  {% endcapture %}
  </style>

  {% render 'custom-css', 
      css: section_css, 
      class: css_class,
      important: false
  %}
  {% liquid
    assign additional_classes = 'nine15--slider section--nine15-slider'
    
    # Add base classes
    if class != blank
      assign additional_classes = additional_classes | append: ' ' | append: class
    endif
    
    if mob_relative == true
      assign additional_classes = additional_classes | append: ' mobile-relative'
    endif
  %}
  
  {% render 'section-wrapper', 
      section: section, 
      base_class: 'section',
      additional_classes: additional_classes,
      content: slides
  %}

  {{modal}}


  {% render 'custom-css', 
      css: section_custom_css, 
      class: css_class 
  %}


  <script type="text/javascript">

      waitForJavascript(function () {
          $(document).ready(function () {

              $('{{css_class}}').slick({
                  // fade:true,
                  infinite: true,
                  autoplay: {{auto_slide}},
                  autoplaySpeed: {{s.pause}},
                  lazyLoad:"progressive",
                  arrows: {{use_arrows}},
                  {% if use_bg_img == false %}
                  apaptiveHeight: true,
                  {% endif %}
                  dots: {{use_dots}},
                  rows: 0,
                  responsive: [
                      {
                          breakpoint: 750,
                          settings: {
                              dots: true
                          }
                      }
                  ]
              });
          })
          $(function(){

              var section = '{{css_class}}',
                  open = '.open-modal',
                  close = '.close-modal, .bg_close',
                  content = '.video-modal',
                  cont_active = 'active';
              $(section+' '+open).click(function(){
                  var tab = $(this),
                      tab_id = tab.attr('data-open'),
                      cont = $("#"+tab_id);
                    cont.addClass(cont_active);
              });
              $(close).click(function(){
                  var tab = $(this),
                      tab_id = tab.attr('data-close'),
                      cont = $("#"+tab_id);
                    cont.removeClass(cont_active);

                  $(".modal_video").each(function() {
                      var src = $(this).attr('src');
                      $(this).attr('src', src);
                  });
              });
          });
          
          // Prevent video flash on mobile
          $(function() {
              function showCorrectVideo() {
                  var isMobile = window.innerWidth <= 749;
                  
                  $('{{css_class}} .video-ratio').each(function() {
                      var $video = $(this);
                      var isMobileVideo = $video.hasClass('medium-up--hide');
                      var isDesktopVideo = $video.hasClass('small--hide');
                      
                      if ((isMobile && isMobileVideo) || (!isMobile && isDesktopVideo)) {
                          $video.addClass('loaded');
                      }
                  });
              }
              
              // Show correct video immediately
              showCorrectVideo();
              
              // Re-check on resize
              $(window).on('resize', function() {
                  $('{{css_class}} .video-ratio').removeClass('loaded');
                  setTimeout(showCorrectVideo, 50);
              });
          });
      });

  </script>
{% endif %}
