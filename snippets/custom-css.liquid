{% if css != blank %}
  <!-- snippets/custom-css -->
  {% comment %}
     {% liquid

         assign s            = section.settings
         assign sID          = section.id

         assign customCSS    = s.custom_css

         assign sectionClass = 'section--' | append: sID
         assign cssClass     = '.' | append: sectionClass

     %}

     {{sectionClass}}

       {% include 'custom-css', css: customCSS, class: cssClass %}

       {% include 'custom-css', css: customCSS, class: cssClass, important: false %}


       {
       "type":"header",
       "content": "Custom CSS Rules"
     },
     {
       "type":"paragraph",
       "content": "Explanation of Custom CSS rules below input."
     },
     {
       "type": "html",
       "id": "custom_css",
       "label": "Custom CSS"
     },
     {
       "type":"paragraph",
       "content": "Use '==' to reference this block's parent container, that way the css you use only applies to this container. The example below applies font size to only the h2 element in the current block's container."
     },
     {
       "type":"paragraph",
       "content": "Ex: '== h2 { font-size: 20px; }'"
     },
     {
       "type":"paragraph",
       "content": "Use '/MEDIA_QUERY/' to create media queries that match css defaults. The example below would output '@media screen and (max-width: 749px)' before the css."
     },
     {
       "type":"paragraph",
       "content": "Ex: '/small/ { == h2 { font-size: 20px; } }'"
     },
     {
       "type":"paragraph",
       "content": "Media Queries: narrow, not-narrow, small, medium, medium-up, medium-down, large, large-up, large-down, ex-large, ex-large-up, ex-large-down, widescreen"
     }

     Snippet code
    important has to be second
  {% endcomment %}

  {% liquid
    assign rplc = '=='

    assign cln = ';'
    assign imp = ' !important;'
    if important == false
      assign imp = cln
    endif

    assign grid_narrow = 400
    assign grid_medium = 750
    assign grid_large = 990
    assign grid_ex_large = 1200
    assign grid_widescreen = 1400

    assign min_width = '(min-width:'
    assign max_width = '(max-width:'
    assign cls = 'px)'
    assign amp = ' and '
    assign mda = '@media screen' | append: amp

    assign max_narrow = grid_narrow | minus: 1 | prepend: max_width | append: cls
    assign min_narrow = grid_narrow | prepend: min_width | append: cls
    assign max_medium = grid_medium | minus: 1 | prepend: max_width | append: cls
    assign min_medium = grid_medium | prepend: min_width | append: cls
    assign max_large = grid_large | minus: 1 | prepend: max_width | append: cls
    assign min_large = grid_large | prepend: min_width | append: cls
    assign max_ex_large = grid_ex_large | minus: 1 | prepend: max_width | append: cls
    assign min_ex_large = grid_ex_large | prepend: min_width | append: cls
    assign max_widescreen = grid_widescreen | minus: 1 | prepend: max_width | append: cls
    assign min_widescreen = grid_widescreen | prepend: min_width | append: cls

    assign nrrw_rplc = '/narrow/'
    assign not_nrrw_rplc = '/not-narrow/'
    assign sml_rplc = '/small/'
    assign med_rplc = '/medium/'
    assign med_up_rplc = '/medium-up/'
    assign med_down_rplc = '/medium-down/'
    assign lrg_rplc = '/large/'
    assign lrg_up_rplc = '/large-up/'
    assign lrg_up_rplc = '/large-down/'
    assign ex_lrg_rplc = '/ex-large/'
    assign ex_lrg_up_rplc = '/ex-large-up/'
    assign ex_lrg_down_rplc = '/ex-large-down/'
    assign wdscrn_rplc = '/widescreen/'

    assign narrow = mda | append: max_narrow
    assign not_narrow = mda | append: min_narrow | append: amp | append: max_medium
    assign small = mda | append: max_medium
    assign medium = mda | append: min_medium | append: amp | append: max_large
    assign medium_up = mda | append: min_medium
    assign medium_down = mda | append: max_large
    assign large = mda | append: min_large | append: amp | append: max_ex_large
    assign large_up = mda | append: min_large
    assign large_down = mda | append: max_ex_large
    assign ex_large = mda | append: min_ex_large | append: amp | append: max_widescreen
    assign ex_large_up = mda | append: min_ex_large
    assign ex_large_down = mda | append: max_widescreen
    assign widescreen = mda | append: min_widescreen

    assign and_nrrw_rplc = '/-narrow/'
    assign and_not_nrrw_rplc = '/-not-narrow/'
    assign and_sml_rplc = '/-small/'
    assign and_med_rplc = '/-medium/'
    assign and_med_up_rplc = '/-medium-up/'
    assign and_med_down_rplc = '/-medium-down/'
    assign and_lrg_rplc = '/-large/'
    assign and_lrg_up_rplc = '/-large-up/'
    assign and_lrg_down_rplc = '/-large-down/'
    assign and_ex_lrg_rplc = '/-ex-large/'
    assign and_ex_lrg_up_rplc = '/-ex-large-up/'
    assign and_ex_lrg_down_rplc = '/-ex-large-down/'
    assign and_wdscrn_rplc = '/-widescreen/'

    assign and_narrow = max_narrow
    assign and_not_narrow = min_narrow | append: amp | append: max_medium
    assign and_small = max_medium
    assign and_medium = min_medium | append: amp | append: max_large
    assign and_medium_up = min_medium
    assign and_medium_down = max_large
    assign and_large = min_large | append: amp | append: max_ex_large
    assign and_large_up = min_large
    assign and_large_down = max_ex_large
    assign and_ex_large = min_ex_large | append: amp | append: max_widescreen
    assign and_ex_large_up = min_ex_large
    assign and_ex_large_down = max_widescreen
    assign and_widescreen = min_widescreen
  %}

  {% assign css_loop = css
    | replace: rplc, class
    | strip
    | lstrip
    | rstrip
    | strip_newlines
    | replace: '&gt;', '>'
    | replace: '<!--', '/*'
    | replace: '-->', '*/'
    | replace: ';;', '|force_unimportant|'
    | replace: cln, imp
    | replace: '|force_unimportant|', ';'
    | replace: '      ', ' '
    | replace: '     ', ' '
    | replace: '    ', ' '
    | replace: '   ', ' '
    | replace: '  ', ' '
    | replace: ': ', ':'
    | replace: ': ', ':'
    | replace: '; ', ';'
    | replace: ' {', '{'
    | replace: '{ ', '{'
    | replace: '} .', '}.'
    | replace: ';}', '}'
    | replace: '} }', '}}'
    | replace: nrrw_rplc, narrow
    | replace: not_nrrw_rplc, not_narrow
    | replace: sml_rplc, small
    | replace: med_rplc, medium
    | replace: med_up_rplc, medium_up
    | replace: med_down_rplc, medium_down
    | replace: lrg_rplc, large
    | replace: lrg_up_rplc, large_up
    | replace: lrg_up_rplc, large_down
    | replace: ex_lrg_rplc, ex_large
    | replace: ex_lrg_up_rplc, ex_large_up
    | replace: ex_lrg_down_rplc, ex_large_down
    | replace: wdscrn_rplc, widescreen
    | replace: and_nrrw_rplc, and_narrow
    | replace: and_not_nrrw_rplc, and_not_narrow
    | replace: and_sml_rplc, and_small
    | replace: and_med_rplc, and_medium
    | replace: and_med_up_rplc, and_medium_up
    | replace: and_med_down_rplc, and_medium_down
    | replace: and_lrg_rplc, and_large
    | replace: and_lrg_up_rplc, and_large_up
    | replace: and_lrg_down_rplc, and_large_down
    | replace: and_ex_lrg_rplc, and_ex_large
    | replace: and_ex_lrg_up_rplc, and_ex_large_up
    | replace: and_ex_lrg_down_rplc, and_ex_large_down
    | replace: and_wdscrn_rplc, and_widescreen
  %}

  <style>
    {{css_loop}}
  </style>
{% endif %}
