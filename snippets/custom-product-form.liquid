{% comment %}
  Renders custom product form with required fields.
  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - form: {Object} the product form object.
  - section: {Object} section to which this snippet belongs.
  - modal_form_shipping_note: {String} the shipping note to display.
  - modal_form_success_message: {String} the success message to display.
  Usage:
  {% render 'custom-product-form', product: product, block: block, form: form, section: section %}
  
  Klaviyo:
  - Internal alert message personalization reference page: https://help.klaviyo.com/hc/en-us/articles/4408802648731#h_01HBRGTJ3H2M4N326FXPBSA4AN
{% endcomment %}
{{ 'section-contact-form.css' | asset_url | stylesheet_tag }}
{% assign contact_form_class = 'custom-product-form isolate' %}
<!-- TODO: required fields error handling -->
{%- form 'contact', id: 'ContactFormProduct', class: contact_form_class, return_to: back -%}
  {%- if form.posted_successfully? -%}
    <h2 class="form-status form-status-list form__message" tabindex="-1" autofocus>
      {% render 'icon-success' %}
      {{ 'templates.contact.form.post_success' | t }}
    </h2>
  {%- elsif form.errors -%}
    <div class="form__message">
      <h2 class="form-status caption-large text-body" role="alert" tabindex="-1" autofocus>
        {% render 'icon-error' %}
        {{ 'templates.contact.form.error_heading' | t }}
      </h2>
    </div>
    <ul class="form-status-list caption-large" role="list">
      <li>
        <a href="#ContactForm-email" class="link">
          {{ form.errors.translated_fields.email | capitalize }}
          {{ form.errors.messages.email }}
        </a>
      </li>
    </ul>
  {%- endif -%}

  <div class='contact__fields'>
    {% comment %} First Name, Last Name {% endcomment %}
    <div class='field-row'>
      <div class='field'>
        <input
          aria-required='true'
          class='field__input'
          autocomplete="given-name"
          type='text'
          id='ContactForm-given-name'
          name='contact[{{ 'templates.contact.form.first_name' | t }}]'
          value="{% if form.name %}{{ form.name }}{% elsif customer %}{{ customer.first_name }}{% endif %}"
          placeholder="{{ 'templates.contact.form.first_name' | t }}"
        >
        <label class='field__label' for='ContactForm-given-name'>
          {{- 'templates.contact.form.first_name' | t }}
          <span aria-hidden="true">*</span>
        </label>
      </div>

      <div class='field'>
        <input
          aria-required='true'
          class='field__input'
          autocomplete="family-name"
          type='text'
          id='ContactForm-family-name'
          name="contact[{{ 'templates.contact.form.last_name' | t }}]"
          value="{% if form.name %}{{ form.name }}{% elsif customer %}{{ customer.last_name }}{% endif %}"
          placeholder="{{ 'templates.contact.form.last_name' | t }}"
        >
        <label class='field__label' for='ContactForm-family-name'>
          {{- 'templates.contact.form.last_name' | t }}
          <span aria-hidden="true">*</span>
        </label>
      </div>
    </div>

    {% comment %} Email, Phone {% endcomment %}
    <div class='field-row'>
      <div class='field'>
        <input
          autocomplete="email"
          type='email'
          id='ContactForm-email'
          class='field__input'
          name='contact[email]'
          spellcheck="false"
          autocapitalize="off"
          value="{% if form.email %}{{ form.email }}{% elsif customer %}{{ customer.email }}{% endif %}"
          aria-required="true"
          {% if form.errors contains 'email' %}
            aria-invalid="true"
            aria-describedby="ContactForm-email-error"
          {% endif %}
          placeholder="{{ 'templates.contact.form.email' | t }}"
        >
        <label class='field__label' for='ContactForm-email'>
          {{- 'templates.contact.form.email' | t }}
          <span aria-hidden="true">*</span>
        </label>
        {%- if form.errors contains 'email' -%}
          <small class="contact__field-error" id="ContactForm-email-error">
            <span class="visually-hidden">{{ 'accessibility.error' | t }}</span>
            <span class="form__message">
              <span class="svg-wrapper">
                {{- 'icon-error.svg' | inline_asset_content -}}
              </span>
              {{- form.errors.translated_fields.email | capitalize }}
              {{ form.errors.messages.email -}}
            </span>
          </small>
        {%- endif -%}
      </div>

      <div class='field'>
        <input
          type='tel'
          id='ContactForm-phone'
          class='field__input{% if form.errors contains "phone" %} invalid{% endif %}'
          autocomplete='tel'
          name='contact[{{ 'templates.contact.form.phone' | t }}]'
          pattern="[0-9\-]*"
          value="{% if form.phone %}{{ form.phone }}{% elsif customer %}{{ customer.phone }}{% endif %}"
          placeholder="{{ 'templates.contact.form.phone' | t }}"
          required="required"
        >
        <label class='field__label' for='ContactForm-phone'>
          {{ 'templates.contact.form.phone' | t }}
        </label>
      </div>
    </div>
    
    {% comment %} Role field {% endcomment %}
    <div class='field'>
      <label class='field__label visually-hidden' for='Role-{{ section.id }}'> Individual/Business* </label>
      <div class='select'>
        <select
          class='select__select{% if form.errors contains "Role" %} invalid{% endif %}'
          id='Role-{{ section.id }}'
          name='contact[Role]'
          required="required"
        >
          <option value=''>- Individual/Business</option>
          <option
            value='Landscape Designer'
            {% if form.Role == 'Landscape Designer' %}
              selected
            {% endif %}
          >
            Landscape Designer
          </option>
          <option
            value='Contractor'
            {% if form.Role == 'Contractor' %}
              selected
            {% endif %}
          >
            Contractor
          </option>
          <option
            value='Architect'
            {% if form.Role == 'Architect' %}
              selected
            {% endif %}
          >
            Architect
          </option>
          <option
            value='Interior Designer'
            {% if form.Role == 'Interior Designer' %}
              selected
            {% endif %}
          >
            Interior Designer
          </option>
          <option
            value='Individual'
            {% if form.Role == 'Individual' %}
              selected
            {% endif %}
          >
            Individual
          </option>
          <option
            value='Other'
            {% if form.Role == 'Other' %}
              selected
            {% endif %}
          >
            Other
          </option>
        </select>
      </div>
    </div>

    {% comment %} Address - Street Address, City {% endcomment %}
    <div class='field-row'>
      {% comment %} Street Address {% endcomment %}
      <div class='field'>
        <input
          class='field__input{% if form.errors contains "Street Address" %} invalid{% endif %}'
          id='Street Address-{{ section.id }}'
          name='contact[Street Address]'
          type='text'
          required="required"
          placeholder='Street Address'
        >
        <label class='field__label' for='Street Address-{{ section.id }}'> Street Address* </label>
      </div>

      {% comment %} City {% endcomment %}
      <div class='field'>
        <input
          class='field__input{% if form.errors contains "LastName" %} invalid{% endif %}'
          id='City-{{ section.id }}'
          name='contact[City]'
          type='text'
          required="required"
          placeholder='City'
        >
        <label class='field__label' for='City-{{ section.id }}'> City* </label>
      </div>
    </div>

    {% comment %} Address - State, Zip {% endcomment %}
    <div class='field-row'>
      {% comment %} State {% endcomment %}
      <div class='field'>
        <input
          class='field__input{% if form.errors contains "State" %} invalid{% endif %}'
          id='State-{{ section.id }}'
          name='contact[State]'
          type='text'
          required="required"
          placeholder='State'
        >
        <label class='field__label' for='State-{{ section.id }}'> State* </label>
      </div>

      {% comment %} Zip {% endcomment %}
      <div class='field'>
        <input
          class='field__input{% if form.errors contains "Zip" %} invalid{% endif %}'
          id='Zip-{{ section.id }}'
          name='contact[Zip]'
          type='text'
          required="required"
          placeholder='Zip'
        >
        <label class='field__label' for='Zip-{{ section.id }}'> Zip* </label>
      </div>
      <div class='field field--note'>
        <p>{{ modal_form_shipping_note }}</p>
      </div>
    </div>
      
    
    {% comment %} Square footage field {% endcomment %}
    <div class='field'>
      <input
        class='field__input{% if form.errors contains "Square Footage" %} invalid{% endif %}'
        id='Square Footage-{{ section.id }}'
        name='contact[Square Footage]'
        type='number'
        placeholder='Square Footage'
        required="required"
        aria-required="true"
      >
      <label class='field__label' for='Square Footage-{{ section.id }}'>Approximate Square Footage<span aria-hidden="true">*</span></label>
    </div>

    {% comment %} Material interest field {% endcomment %}
    <fieldset class='field field--checkbox'>
      <legend class='field__label field__label--checkbox'>Material Interest (select as many as you'd like)</legend>
      <div class='checkbox-group'>
        <div class='checkbox-item'>
          <input
            type='checkbox'
            id='PathFines-{{ section.id }}'
            name='contact[Material Interest - Path Fines]'
            value='Path Fines'
            class='checkbox__input{% if form.errors contains "Material Interest" %} invalid{% endif %}'
          >
          <label class='checkbox__label' for='PathFines-{{ section.id }}'>Path Fines</label>
        </div>
        <div class='checkbox-item'>
          <input
            type='checkbox'
            id='Gravel-{{ section.id }}'
            name='contact[Material Interest - Gravel]'
            value='Gravel'
            class='checkbox__input{% if form.errors contains "Material Interest" %} invalid{% endif %}'
          >
          <label class='checkbox__label' for='Gravel-{{ section.id }}'>Gravel</label>
        </div>
        <div class='checkbox-item'>
          <input
            type='checkbox'
            id='Boulder-{{ section.id }}'
            name='contact[Material Interest - Boulder]'
            value='Boulder'
            class='checkbox__input{% if form.errors contains "Material Interest" %} invalid{% endif %}'
          >
          <label class='checkbox__label' for='Boulder-{{ section.id }}'>Boulder</label>
        </div>
        <div class='checkbox-item'>
          <input
            type='checkbox'
            id='Pavers-{{ section.id }}'
            name='contact[Material Interest - Pavers]'
            value='Pavers'
            class='checkbox__input{% if form.errors contains "Material Interest" %} invalid{% endif %}'
          >
          <label class='checkbox__label' for='Pavers-{{ section.id }}'>Pavers</label>
        </div>
      </div>
    </fieldset>
    
    {% comment %} Message {% endcomment %}
    <div class='field'>
      <textarea
        rows='4'
        id='ContactForm-body'
        class='text-area field__input{% if form.errors contains "Message" %} invalid{% endif %}'
        name="contact[{{ 'templates.contact.form.comment' | t }}]"
        placeholder="{{ 'templates.contact.form.comment' | t }}"
        required="required"
        aria-required='true'
        {% if form.errors contains 'body' %}
          aria-invalid='true'
          aria-describedby='Message-error-{{ section.id }}'
        {% endif %}
      >
        {{- form.body -}}
      </textarea>
      <label class='field__label' for='ContactForm-body'>
        {{- 'templates.contact.form.comment' | t -}}
      </label>
      {%- if form.errors contains 'body' -%}
        <small class='contact__field-error' id='Message-error-{{ section.id }}'>
          <span class='visually-hidden'>{{ 'accessibility.error' | t }}</span>
          <span class='form__message'>{% render 'icon-error' %}{{ form.errors.translated_fields['body'] | capitalize }} {{ form.errors.messages['body'] }}</span>
        </small>
      {%- endif -%}
    </div>

    <div class='contact__button product-form__buttons'>
      <button
        type='submit'
        class='button product-form__submit'
      >
      {{ 'templates.contact.form.send' | t }} <span class='icon-arrow'>→</span>
      </button>
    </div>
  </div>
{%- endform -%}

<style>
    /* Make the form scrollable on mobile */
    .custom-product-form {
      padding-bottom: 1rem;
    }
  
    .contact__fields {
      display: flex;
      flex-direction: column;
      gap: 2rem;
      padding-bottom: 1rem;
    }

    .field-row {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 2rem;
    }
    .field-row:has(.field--note) {
      gap: 1rem;
    }

    @media screen and (max-width: 749px) {
      .field-row {
        grid-template-columns: 1fr;
        gap: 1.5rem;
      }
      .checkbox-group {
        flex-direction: column;
      }
    }
    .field--note {
      grid-column: 1 / -1;
    }
    .field--note p {
      margin: 0;
    }
    .checkbox-group {
      display: flex;
      gap: 1rem;
      padding: 2.2rem 1.5rem 0.8rem 0;
      border-bottom: 0.1rem solid rgb(var(--color-base-text));
    }
    .checkbox-item {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    .checkbox__input {
      width: auto;
      margin: 0;
    }
    .checkbox__label {
      margin: 0;
    }
    .icon-arrow {
      transition: transform 0.2s ease;
    }

    .product-form__submit:hover .icon-arrow {
      transform: translateX(5px);
    }
    .form__message {
      flex-direction: column;
      align-items: baseline;
      border: none;
    }

    .form--success .form-status-list {
      display: block;
    }

    .form--success .contact__fields {
      display: none;
    }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const form = document.querySelector('#ContactFormProduct')
    const inputs = form.querySelectorAll('.field__input')

    inputs.forEach((input) => {
      input.addEventListener('invalid', function (e) {
        e.preventDefault()
        this.classList.add('invalid')
      })

      input.addEventListener('input', function () {
        if (this.validity.valid) {
          this.classList.remove('invalid')
        }
      })
    })
  })
  // Klaviyo form submission
  document.querySelector('#ContactFormProduct').addEventListener('submit', async function (e) {
    // prevent default submission
    e.preventDefault()

    const form = this
    const submitButton = form.querySelector('button[type="submit"]')
    const formFields = form.querySelector('.contact__fields')
    const formMessage = form.querySelector('.form__message')

    try {
      submitButton.disabled = true

      const email = this.querySelector('[name="contact[email]"]').value
      const firstName = this.querySelector('[name="contact[First Name]"]').value
      const lastName = this.querySelector('[name="contact[{{ 'templates.contact.form.last_name' | t }}]"]').value
      const phone = this.querySelector('[name="contact[{{ 'templates.contact.form.phone' | t }}]"]').value
      const role = this.querySelector('[name="contact[Role]"]').value
      const streetAddress = this.querySelector('[name="contact[Street Address]"]').value
      const city = this.querySelector('[name="contact[City]"]').value
      const state = this.querySelector('[name="contact[State]"]').value
      const zip = this.querySelector('[name="contact[Zip]"]').value
      const squareFootage = this.querySelector('[name="contact[Square Footage]"]').value
      // Get all selected material interests
      const materialInterestCheckboxes = this.querySelectorAll('[name^="contact[Material Interest -"]:checked')
      const materialInterests = Array.from(materialInterestCheckboxes)
        .map((checkbox) => checkbox.value)
        .join(', ')
      const message = this.querySelector('[name="contact[{{ 'templates.contact.form.comment' | t }}]"]').value

      // Wait for Klaviyo to be ready
      if (typeof _learnq === 'undefined') {
        await new Promise((resolve) => setTimeout(resolve, 1000))
      }

      // Identify the profile
      _learnq.push([
        'identify',
        {
          $email: email,
          $first_name: firstName,
          $last_name: lastName,
          $phone_number: phone,
          Role: role,
          $address1: streetAddress,
          $city: city,
          $state: state,
          $zip: zip,
          'Square Footage': squareFootage,
          'Material Interest': materialInterests,
          Message: message,
          Source: 'Product Inquiry Form',
          $source: 'Product Inquiry Form - {{ product.title }}',
          Product: '{{ product.title }}',
          Product_Type: '{{ product.type }}',
          Collections:
            '{% for collection in product.collections %}{{ collection.title }}{% unless forloop.last %}, {% endunless %}{% endfor %}',
          Inquiry_Date: new Date().toISOString()
        }
      ])

      // List subscription
      if ('{{ settings.klaviyo_list_id }}') {
        _learnq.push([
          'track',
          'Product Inquiry Form Submission',
          {
            $email: email,
            $first_name: firstName,
            $last_name: lastName,
            $phone_number: phone,
            Role: role,
            $address1: streetAddress,
            $city: city,
            $state: state,
            $zip: zip,
            'Square Footage': squareFootage,
            'Material Interest': materialInterests,
            Message: message,
            Source: 'Product Inquiry Form',
            $source: 'Product Inquiry Form - {{ product.title }}',
            Product: '{{ product.title }}',
            Product_Type: '{{ product.type }}',
            
          }
        ])
      }
      
      // Optional delay to ensure Klaviyo gets its time
      await new Promise((resolve) => setTimeout(resolve, 300))
    } catch (error) {
      console.error('Klaviyo submission error:', error)
      formMessage.innerHTML = `
            <div class='form__message' tabindex='-1' autofocus>
                <h2>{% render 'icon-error' %} There was a problem submitting your inquiry</h2>
                <p>Please try again later.</p>
            </div>
        `
      formMessage.style.display = 'block'
    } finally {
      submitButton.disabled = false
    }
  })
  
</script>
