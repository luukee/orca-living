<!-- snippets/navigation-content.liquid -->

{% liquid 
  assign makeh1       = section.settings.make_h1
  assign navigationHorizontal = section.settings.navigation_horizontal
  
  assign headingEl    = 'h2'
  if makeh1 == true and template.name == 'collection'
    assign headingEl  = 'h1'
  endif
  
  # Get the secondary menu using the handle
  assign secondary_menu = linklists[section.settings.secondary_menu_handle]
%}

<div class="gradient section--navigation navigation-content">
  <div class="page-width section-{{ section.id }}-padding">

    {% if section.settings.title %}
      <{{headingEl}} class="h4">{{section.settings.title}}</{{headingEl}}>
    {% endif %}

    <!-- Mobile Navigation Drawer -->
    <div class="navigation-mobile">
      <navigation-drawer>
        <details id="Details-navigation-drawer-container" class="navigation-drawer-container">
          <summary class="navigation-drawer__toggle" aria-label="{{ 'sections.header.menu' | t }}">
            <span>
              {% render 'icon-hamburger' %}
              {% render 'icon-close' %}
            </span>
          </summary>
          <div id="navigation-drawer" class="navigation-drawer" tabindex="-1">
            <div class="navigation-drawer__inner-container">
              <div class="navigation-drawer__header">
                <h2 class="navigation-drawer__title">
                  {% if section.settings.title %}
                    {{ section.settings.title }}
                  {% else %}
                    {% comment %} {{ 'sections.header.menu' | t }} {% endcomment %}
                  {% endif %}
                </h2>
                <button type="button" class="navigation-drawer__close-button link link--text focus-inset" aria-label="{{ 'accessibility.close' | t }}">
                  {% render 'icon-close' %}
                </button>
              </div>
              <div class="navigation-drawer__navigation-container">
                <nav class="navigation-drawer__navigation">
                  <ul class="navigation-drawer__menu" role="list">
                    {%- for link in secondary_menu.links -%}
                      {% liquid 
                        assign isCurrent          = false 
                        assign linkHandle         = link.handle 

                        assign collectionHandle   = collection.handle 
                        capture collectionURL 
                          render 'snippet--url-query', queryString: 'collection'
                        endcapture
                        if collectionURL != ''
                          if link.url contains collectionURL
                            assign isCurrent      = true 
                          endif
                        endif

                        if link.current
                          assign isCurrent        = true 
                        endif 

                        if collectionHandle == linkHandle
                          assign isCurrent        = true
                        endif 

                        if collectionHandle == 'quick-ship' and linkHandle == 'pavers'
                          assign isCurrent        = true
                        endif

                        assign linkURL            = link.url
                        if isCurrent and template.name != 'article'
                          assign linkURL          = linkURL | split: '/tagged' | first
                        endif 

                        for tag in article.tags
                          assign linkHndl         = link.url | handleize
                          assign tagHndl          = tag |handleize 
                          if linkHndl contains tagHndl
                            assign isCurrent      = true
                            break
                          endif 
                        endfor 

                        assign ChildLinkSize      = link.links | size
                        
                        assign path = request.path
                        assign show_nav_child_links = false
                        if path contains 'pavers' or path contains 'quick-ship'
                          assign show_nav_child_links = true
                        endif
                      %}
                      <li>
                        <a href="{{ linkURL }}" class="navigation-drawer__menu-item link link--text focus-inset{% if isCurrent %} navigation-drawer__menu-item--active{% endif %}"{% if isCurrent %} aria-current="page"{% endif %}>
                          {{ link.title | escape }}
                        </a>
                        {% if isCurrent %}
                          {%- if ChildLinkSize > 0 and template.name == 'collection' or show_nav_child_links -%}
                            <ul class="navigation-drawer__submenu" role="list">
                              {%- for childlink in link.links -%}
                                {% liquid 
                                  assign showChildLink      = false
                                  assign isCurrentInner     = false
                                  assign taggedHandle       = ''
                                  assign allTagsHandles     = collection.all_tags | handleize  | replace: '_',''
                                  for tag in current_tags
                                    assign taggedHandle     = tag | handleize | replace: '_',''
                                  endfor 
                                  assign currentChildLink   = childlink.handle | handleize | replace: '_',''
                                  if currentChildLink contains taggedHandle and taggedHandle != ''
                                    assign isCurrentInner   = true
                                  endif
                                  if allTagsHandles contains currentChildLink
                                    assign showChildLink    = true 
                                  endif 
                                %}
                                <li>
                                  <a href="{{ childlink.url }}" class="navigation-drawer__menu-item link link--text focus-inset {% if isCurrentInner %} navigation-drawer__menu-item--active{% endif %}">
                                    {{ childlink.title | escape }}
                                  </a>
                                </li>
                              {%- endfor -%}  
                            </ul>          
                          {%- endif -%}            
                        {% endif %}
                      </li>
                    {%- endfor -%}
                  </ul>
                </nav>
              </div>
            </div>
          </div>
        </details>
      </navigation-drawer>
    </div>

    <!-- Desktop Navigation -->
    <div class="navigation-desktop">
      <ul class="list-menu" role="list">
        {%- for link in secondary_menu.links -%}
          {% liquid 
            assign isCurrent          = false 
            assign linkHandle         = link.handle 

            assign collectionHandle   = collection.handle 
            capture collectionURL 
              render 'snippet--url-query', queryString: 'collection'
            endcapture
            if collectionURL != ''
              if link.url contains collectionURL
                assign isCurrent      = true 
              endif
            endif

            if link.current
              assign isCurrent        = true 
            endif 

            if collectionHandle == linkHandle
              assign isCurrent        = true
            endif 

            if collectionHandle == 'quick-ship' and linkHandle == 'pavers'
              assign isCurrent        = true
            endif

            assign linkURL            = link.url
            if isCurrent and template.name != 'article'
              assign linkURL          = linkURL | split: '/tagged' | first
            endif 

            for tag in article.tags
              assign linkHndl         = link.url | handleize
              assign tagHndl          = tag |handleize 
              if linkHndl contains tagHndl
                assign isCurrent      = true
                break
              endif 
            endfor 

            assign ChildLinkSize      = link.links | size
            
            assign path = request.path
            assign show_nav_child_links = false
            if path contains 'pavers' or path contains 'quick-ship'
              assign show_nav_child_links = true
            endif
          %}
          <li>
            <a href="{{ linkURL }}" class=" list-menu__item link link--text focus-inset{% if isCurrent %} menu-item--active{% endif %}"{% if isCurrent %} aria-current="page"{% endif %}>
              {% if isCurrent and template.name == 'collection' %}<h1>{% endif %}
              {{ link.title | escape }}
              {% if isCurrent and template.name == 'collection' %}</h1>{% endif %}
            </a>
            {% if isCurrent %}
              {%- if ChildLinkSize > 0 and template.name == 'collection' or show_nav_child_links -%}
                <ul class="menu-drawer__menu list-menu medium-down--hide" role="list">
                  {%- for childlink in link.links -%}
                    {% liquid 
                      assign showChildLink      = false
                      assign isCurrentInner     = false
                      assign taggedHandle       = ''
                      assign allTagsHandles     = collection.all_tags | handleize  | replace: '_',''
                      for tag in current_tags
                        assign taggedHandle     = tag | handleize | replace: '_',''
                      endfor 
                      assign currentChildLink   = childlink.handle | handleize | replace: '_',''
                      if currentChildLink contains taggedHandle and taggedHandle != ''
                        assign isCurrentInner   = true
                      endif
                      if allTagsHandles contains currentChildLink
                        assign showChildLink    = true 
                      endif 
                    %}
                    <li>
                      <a href="{{ childlink.url }}" class=" list-menu__item link link--text focus-inset {% if isCurrentInner %} menu-item--active{% endif %}">
                        {{ childlink.title | escape }}
                      </a>
                    </li>
                  {%- endfor -%}  
                </ul>          
              {%- endif -%}            
            {% endif %}
          </li>
        {%- endfor -%}
      </ul>
    </div>

  </div>
</div>

<script>
  class NavigationDrawer extends HTMLElement {
    constructor() {
      super();
      this.drawer = this.querySelector('#navigation-drawer');
      this.toggle = this.querySelector('.navigation-drawer__toggle');
      this.closeButton = this.querySelector('.navigation-drawer__close-button');
      this.details = this.querySelector('details');
      this.bindEvents();
    }

    bindEvents() {
      // Let the details element handle the toggle naturally
      this.closeButton.addEventListener('click', this.closeDrawer.bind(this));
      
      // Close drawer when clicking outside
      this.drawer.addEventListener('click', (event) => {
        if (event.target === this.drawer) {
          this.closeDrawer();
        }
      });

      // Close drawer on escape key
      document.addEventListener('keydown', (event) => {
        if (event.key === 'Escape' && this.isOpen()) {
          this.closeDrawer();
        }
      });

      // Listen for details toggle to sync our custom state
      this.details.addEventListener('toggle', (event) => {
        if (event.target.open) {
          // Details was opened, add our custom active class
          this.drawer.classList.add('active');
          this.toggle.setAttribute('aria-expanded', 'true');
          document.body.style.overflow = 'hidden';
        } else {
          // Details was closed, remove our custom active class
          this.drawer.classList.remove('active');
          this.toggle.setAttribute('aria-expanded', 'false');
          document.body.style.overflow = '';
        }
      });
    }

    closeDrawer() {
      this.details.removeAttribute('open');
    }

    isOpen() {
      return this.details.hasAttribute('open');
    }
  }

  customElements.define('navigation-drawer', NavigationDrawer);
</script> 