<!-- snippets/snippets--article-includes -->

{% liquid 
  assign mf                     = article.metafields.custom_fields

  assign h6_is_wrong              = '<h6><span>'
  if article_rte contains h6_is_wrong
    assign article_rte           = article_rte | replace: h6_is_wrong,'<h6>'
    assign article_rte           = article_rte | replace: '</span></h6>','</h6>'
  endif 

  assign end_rte_split             = '</h6>' 
  assign start_rte_split           = end_rte_split | replace: '/','' 

  assign has_splitter            = false
  if article_rte contains end_rte_split
    assign has_splitter          = true
  endif

  assign article_images          = mf["images"]
  assign image_groups            = '' 

  assign article_two_grids        = mf["two_grid"]
  assign two_grid_groups          = ''

  assign width_replace               = "|WIDTH_REPLACE|"  
  assign width_data_replace           = "|WIDTH_DATA_REPLACE|"  

  assign split_comment            = '<!-- split -->' 
  assign split_start                 = '<!-- replace_' 
  assign split_end                = ' -->' 
  assign split_single_item         = '<!-- SINGLE_ITEM -->'
  assign split_big                = split_end | append: split_comment 


%}

{% if has_splitter %}



{% comment %}
  Images setup
{% endcomment %}

    {% comment %}
      Create Image Item. 
      Then add Image Item to Image Group.
    {% endcomment %}
      {%- for item in article_images -%}
        {%- liquid 

          assign show_image          = false
          assign group_handle        = item["group_name"] | strip | handleize 
          assign img_replace           = split_start | append: group_handle | append: split_big 
          
          assign img                = item["image"]
          assign img_height            = item["image_height"]
          assign txt                = item["caption"]
          assign offset             = item["enable_offset"]
          
          assign width_close            = width_replace
          assign width_data           = width_data_replace
          assign images_per_row         = item["images_per_row"]
          if images_per_row != '' and images_per_row != blank
            assign width_data         = images_per_row
            capture width_close 
              render 'snippet--grid-widths', perRow: images_per_row 
            endcapture 
          endif
         
          assign style              = '--image--set-height: 56%;'
          if img_height != '' and img_height != blank
            assign style            = '--image--set-height:' | append: img_height | append: ';'
          endif 

          assign images_use_slider      = false
          assign slider_data         = 'data-slider'

          assign images_full_width      = false
          assign page_width_data      = 'data-page-width'

          if img != blank
            
            assign show_image        = true

            unless image_groups contains img_replace 
              assign image_groups    = image_groups | append: img_replace 
              assign images_full_width  = false
              assign images_use_slider  = false

              if item["make_section_full_width"] contains 1 or item["make_section_full_width"] contains '1'
                assign images_full_width = true
              endif 

              if item["make_images_a_slider"] contains 1 or item["make_images_a_slider"] contains '1'
                assign images_use_slider = true
              endif 

            endunless 
          endif 

        -%}

        {% comment %}  Create Image Item. {% endcomment %}
        {%- if show_image -%}
          {%- capture image_item -%}
            <div 
              class="cell__item {%if width_data == '2'%} medium-up--one-half {%endif%} {% if offset == '1' %} image-margin-top {%endif%}" 
              data-width="{{width_data}}" 
              {% if images_use_slider == true %}{{slider_data}}{% endif %} 
              {% if images_full_width == true %}{{page_width_data}}{% endif %}
            >
              <div class="inner-container">
                <!-- include 'snippet--image' -->
                {% comment %} {% render 'dump' with img %} {% endcomment %}
                {% render 'snippet--image', img: img, cf: true, customStyle: style %}
                {% if txt != blank and txt != '' %}
                  <div class="caption">{{txt}}</div>
                {% endif %}
                
              </div>
            </div>
            {{split_single_item}}
            {{img_replace}}
          {%- endcapture -%}

          {% comment %}  Add Image Item to Image Group.  {% endcomment %}
          {%- assign image_groups    = image_groups | replace: img_replace, image_item -%}
        {%- endif %}
      {%- endfor %}


    {% comment %} 
      Split Image Group. 
      Then apply Grid Width and create handle. 
      Then wrap Image Group in Grid Container. 
      Then Insert into article_rte.  
    {% endcomment %}
      {%- assign image_groups        = image_groups | split: split_comment -%}
      {%- for group in image_groups -%}
        {%- if group != '' and group != blank -%}
          
          {% comment %} Then apply Grid Width and create handle. {% endcomment %}
          {%- liquid 
            assign group_handle      = group | split: split_start | last | split: split_end | first | handleize
            assign split_article_rte   = article_rte | strip | split: start_rte_split
            assign item_length       = group | split: split_single_item | size | minus: 1 
            capture width 
              render 'snippet--grid-widths', perRow: item_length 
            endcapture 

            assign group_with_width   = group | replace: width_replace, width | replace: width_data, item_length
          -%}

          {% comment %} Then wrap Image Group in Grid Container. {% endcomment %}
          {%- capture grid_container -%}
            <div class="article-template__image-gallery {% if group contains page_width_data %}full-width{% endif %}">
              <div class="cell  half_gutter vert-top {% if group contains slider_data %}slider{% endif %}">
                {{group_with_width}}
              </div>
            </div>
          {%- endcapture -%}

          {% comment %} Then Insert into article_rte.  {% endcomment %}
          {%- capture article_rte -%}
            {%- for rte in split_article_rte -%}
              {%- liquid
                assign rte_group_handle = rte | split: end_rte_split | first | trim | remove_first: 'Gallery' | handleize
                assign rte_cleaned   = rte | remove: rte_group_handle | replace: end_rte_split, ''
                assign rte_cleaned   = rte | prepend: start_rte_split
              -%}
              {%- if group_handle == rte_group_handle -%}
                {{grid_container}}
              {%- endif -%}
              {{rte_cleaned}}
            {%- endfor -%}
          {%- endcapture -%}

        {%- endif -%}
      {%- endfor -%}



{% comment %}
TWO GRID
{% endcomment %}

    {% comment %}
    TWO GRID
    {% endcomment %}
      {%- for item in article_two_grids -%}
        {%- liquid 

          assign show_image          = false
          assign group_handle        = item["group_name"] | strip | handleize 
          assign img_replace            = split_start | append: group_handle | append: split_big 
          
          assign img                = item["image"]
          assign img_2              = item["description_image"]
          assign img_height            = item["image_height"]
          assign order              = item["flip_grid"]
          assign background         = item["background_color"]
          
          assign desc               = item["description"]
          assign reverse_col        = item["reverse_col"]
          
          assign width_data           = width_data_replace
         

          assign style              = '--image--set-height: 56%;'
          if img_height != '' and img_height != blank
            assign style            = '--image--set-height:' | append: img_height | append: ';'
          endif 
          if img != blank
            
            assign show_image        = true

            unless two_grid_groups contains img_replace 
              
              assign two_grid_groups    = two_grid_groups | append: img_replace 
              assign images_full_width  = false
              assign images_use_slider  = false


            endunless 
          endif 

        -%}

        {% comment %}  Create Image Item. {% endcomment %}
        {%- if show_image -%}
          {%- capture image_item -%}
            <div class="cell__item">
              <div class="two-grid {%if reverse_col == '1' %} reserve-col {%endif%} {%if background != blank%}  custom-style {%endif%}" {%if background != blank%} style="background:{{background}};" {%endif%}>
                <div class="caption{% if order == '1' %} order-2 {%endif%}" {%if background != blank %} style="padding:60px; margin:auto;" {% endif %} >
                  {%if img_2 %}
                  <img src="{{img_2 | asset_url }}" width="100%" height="auto" alt="">
                  {%endif%}
                  <p>{{desc}}</p>
                </div>
                <div class="image  {% if order == '1' %} order-1 {%endif%}">
                {% render 'snippet--image', img: img, cf: true, customStyle: style %}
                </div>
                
              </div>
            </div>
            {{split_single_item}}
            {{img_replace}}
          {%- endcapture -%}

          {% comment %}  Add Image Item to Image Group.  {% endcomment %}
          {%- assign two_grid_groups    = two_grid_groups | replace: img_replace, image_item -%}
        {%- endif %}
      {%- endfor %}


    {% comment %} 
      Split Image Group. 
      Then apply Grid Width and create handle. 
      Then wrap Image Group in Grid Container. 
      Then Insert into article_rte.  
    {% endcomment %}
      {%- assign two_grid_groups        = two_grid_groups | split: split_comment -%}
      {%- for group in two_grid_groups -%}
        {%- if group != '' and group != blank -%}
          
          {% comment %} Then apply Grid Width and create handle. {% endcomment %}
          {%- liquid 
            assign group_handle      = group | split: split_start | last | split: split_end | first | handleize
            assign split_article_rte   = article_rte | strip | split: start_rte_split
            assign item_length       = group | split: split_single_item | size | minus: 1 
            capture width 
              render 'snippet--grid-widths', perRow: item_length 
            endcapture 
            assign group_with_width   = group | replace: width_replace, width | replace: width_data, item_length
          -%}

          {% comment %} Then wrap Image Group in Grid Container. {% endcomment %}
          {%- capture grid_container -%}
            <div class="two-grid-section {% if group contains page_width_data %}full-width{% endif %}">
              <div class="cell  half_gutter vert-top {% if group contains slider_data %}slider{% endif %}">
                {{group_with_width}}
              </div>
            </div>
          {%- endcapture -%}

          {% comment %} Then Insert into article_rte.  {% endcomment %}
          {%- capture article_rte -%}
            {%- for rte in split_article_rte -%}
              {%- liquid
                assign rte_group_handle = rte | split: end_rte_split | first | trim | remove_first: 'Gallery' | handleize
                assign rte_cleaned   = rte | remove: rte_group_handle | replace: end_rte_split, ''
                assign rte_cleaned   = rte | prepend: start_rte_split
              -%}
              {%- if group_handle == rte_group_handle -%}
                {{grid_container}}
              {%- endif -%}
              {{rte_cleaned}}
            {%- endfor -%}
          {%- endcapture -%}

        {%- endif -%}
      {%- endfor -%}





{% comment %} 
  !!!!!!!!!!!!!!!!!
  MUST BE LAST STEP.
  Clean's all H6's out 
  !!!!!!!!!!!!!!!!!
{% endcomment %}
    {%- liquid
      capture article_rte 
        assign split_article_rte     = article_rte | strip | split: start_rte_split 
        for rte in split_article_rte 
          if rte contains end_rte_split
            assign rte_group_handle = rte | split: end_rte_split | first
            assign rte_cleaned     = rte | remove: rte_group_handle | replace: end_rte_split, ''
          else 
            assign rte_cleaned     = rte 
          endif 
          echo rte_cleaned
        endfor 
      endcapture 
    -%}


  <script type="text/javascript">
    waitForJavascript(function () {
      var slds = $('.article-template__image-gallery .slider,.article-template__featured-products .slider');
      slds.each(function () {
        var el = $(this),
            slidesCount = el.find('.cell__item').length,
            slidesWidth = el.children().first().data('width'),
            settings_slider = {
              autoplay: false,
              dots: true,
              arrows: true,
              slidesToShow: ( slidesWidth >= +slidesCount ? +slidesCount : slidesWidth ),
              rows: 0, 
              infinite: true,
              centerMode: false,
              responsive: [
                {
                  breakpoint: 990,
                  settings: {
                    dots: true,
                    slidesToShow: ( slidesWidth >= +slidesCount ? +slidesCount : slidesWidth )
                  }
                },
                {
                  breakpoint: 750,
                  settings: {
                    dots: true,
                    slidesToShow: ( 2 >= +slidesCount ? +slidesCount : 2 )
                  }
                },
                {
                  breakpoint: 400,
                  settings: {
                    dots: true,
                    slidesToShow: 1
                  }
                }
              ]
            };
        // console.log(slidesWidth)
        el.slick(settings_slider).on("beforeChange", function (){
          LazyImages();
        });
      })
    });
  </script>

{% endif %}
