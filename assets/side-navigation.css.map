{"version":3,"sources":["side-navigation.scss","_mixins.scss"],"names":[],"mappings":"AACA,0DAEA,mCAAA,CAGA,2CACA,aAAA,CACA,oBAAA,CACA,2BAAA,CAGA,iDACA,yBAAA,CAGA,8CACA,WAAA,CAKA,oEACA,WAAA,CAMA,gCAEA,qCAAA,CACA,uCAAA,CACA,0CAAA,CAGA,iDACA,gBAAA,CACA,aAAA,CAOA,4CACA,mCAAA,CACA,SAAA,CAEA,+KAGA,YAAA,CAGA,iEACA,SAAA,CCcM,0CDPN,sCACA,SAAA,CACA,iBAAA,CAGA,0DAEA,4BAAA,CACA,eAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,SAAA,CACA,QAAA,CACA,kBAAA,CACA,2BAAA,CAGA,qCACA,YAAA,CACA,uBAAA,CACA,eAAA,CAEA,8BAAA,CACA,uCAAA,CACA,cAAA,CACA,kBAAA,CAGA,sDACA,gCAAA,CAAA,CCvBM,0CD+BN,6CACA,UAAA,CACA,iBAAA,CACA,KAAA,CACA,OAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CACA,mBAAA,CACA,4HAAA,CAAA","file":"side-navigation.css","sourcesContent":["@import '../assets/mixins';.section--side-navigation {\n  h1,\n  h2 {\n    margin: 0 0 var(--base-gutter--half);\n  }\n\n  .list-menu__item {\n    padding: 1px 0;\n    text-decoration: none;\n    text-underline-offset: 0.3rem;\n    // font-size: 1.5rem;\n\n    &:hover {\n      text-decoration: underline;\n    }\n\n    h1 {\n      all: inherit;\n    }\n\n    &.menu-item--active {\n      \n      &:before {\n        content:'_';\n      }\n    }\n  }\n\n  li {\n    > ul {\n      padding:{\n        left: var(--base-gutter--half);\n        top: var(--base-gutter--quarter);\n        bottom: var(--base-gutter--quarter);\n      }\n\n      .list-menu__item {\n        font-size: 1.3rem;\n        padding: 2px 0;\n      }\n\n      \n    }\n  }\n\n  .facets-container {\n    margin: 0 0 var(--base-gutter--half);\n    padding: 0;\n\n    .facets-pill,\n    > .product-count,\n    > .active-facets {\n      display: none;\n    }\n\n    .mobile-facets__open {\n      padding: 0;\n    }\n  }\n\n\n  @include mq($medium-down) {\n\n    .page-width {\n      padding: 0;\n      position: relative;\n    }\n\n    h1,\n    h2 {\n      position: absolute !important;\n      overflow: hidden;\n      width: 1px;\n      height: 1px;\n      margin: -1px;\n      padding: 0;\n      border: 0;\n      clip: rect(0 0 0 0);\n      word-wrap: normal !important;\n    }\n\n    .list-menu {\n      display: flex;\n      display: none !important;\n      overflow-x: auto; \n      padding: {\n        top: var(--base-gutter);\n        bottom: var(--base-gutter--half);\n        left: 0;\n        right: 35vw; // to give links clearance on right side\n      }\n\n      .list-menu__item {\n        padding: 0 var(--base-gutter) 0 0;\n      }\n    }\n  }\n\n  @include mq($small) {\n    .page-width {\n      \n      &:before {\n        content:'';\n        position: absolute;\n        top: 0;\n        right: 0;\n        height: 100%;\n        width: 100%;\n        z-index: 99;\n        pointer-events: none;\n        background: linear-gradient(90deg, rgba(var(--color-base-background-1),0) 40%, rgba(var(--color-base-background-1),1) 100%);\n      }\n    }\n  }\n}","/*============================================================================\n  Grid Breakpoints and Class Names\n    - Do not change the variable names\n    - $grid-narrow is based on a Shopify breakpoint for checkout buttons\n==============================================================================*/\n$grid-narrow: 400px;\n$grid-medium: 750px;\n$grid-large: 990px;\n$grid-ex-large:1200px;\n$grid-widescreen: 1400px;\n$grid-gutter: 30px;\n$grid-gutter-mobile: 22px;\n\n$narrowish: 'narrow';\n$narrow: 'narrow';\n$not-narrow: 'not-narrow';\n$small: 'small';\n$medium: 'medium';\n$medium-down: 'medium-down';\n$medium-up: 'medium-up';\n$large: 'large';\n$large-down: 'large-down';\n$large-up: 'large-up';\n$ex-large: 'ex-large';\n$ex-large-up: 'ex-large-up';\n$widescreen: 'widescreen';\n\n/*============================================================================\n  Generate breakpoint-specific column widths and push classes\n    - Default column widths: $grid-breakpoint-has-widths: ($small, $medium-up);\n    - Default is no push classes\n==============================================================================*/\n$grid-breakpoint-has-widths: ($narrow, $not-narrow, $small, $medium-up, $medium, $medium-down, $large, $large-up, $large-down, $ex-large, $ex-large-up);\n$grid-breakpoint-has-push: $grid-breakpoint-has-widths;\n\n\n\n/*============================================================================\n  #Grid\n==============================================================================*/\n\n// The `$grid-breakpoints` list is used to build our media queries.\n// You can use these in the mq mixin.\n$grid-breakpoints: (\n    $narrow '(max-width: #{$grid-narrow})',\n    $not-narrow '(min-width: #{$grid-narrow + 1}) and (max-width: #{$grid-medium - 1})',\n    $small '(max-width: #{$grid-medium - 1})',\n    $medium '(min-width: #{$grid-medium}) and (max-width: #{$grid-large - 1})',\n    $medium-down '(max-width: #{$grid-large - 1})',\n    $medium-up '(min-width: #{$grid-medium})',\n    $large '(min-width: #{$grid-large}) and (max-width: #{$grid-ex-large - 1})',\n    $large-down '(max-width: #{$grid-ex-large - 1})',\n    $large-up '(min-width: #{$grid-large})',\n    $ex-large '(min-width: #{$grid-ex-large}) and (max-width: #{$grid-widescreen - 1})',\n    $ex-large-up '(min-width: #{$grid-ex-large})',\n    $widescreen '(min-width: #{$grid-widescreen})'\n);\n\n\n\n@mixin mq($mq) {\n  $breakpoint-found: false;\n\n  @each $breakpoint in $grid-breakpoints {\n    $name: nth($breakpoint, 1);\n    $declaration: nth($breakpoint, 2);\n\n    @if $mq == $name and $declaration {\n      $breakpoint-found: true;\n\n      @media only screen and #{$declaration} {\n        @content;\n      }\n    }\n  }\n\n  @if $breakpoint-found == false {\n    @warn 'Breakpoint \"#{$mq}\" does not exist';\n  }\n}\n\n\n// scss doesn't like min() and max(), so use these mixins to fix\n@function css-function( $function, $values... ) {\n  @return \n    $function\n    + unquote( '(' )\n    + $values\n    + unquote( ')' )\n  ;\n}\n\n@function css-min( $values... ) {\n  @return css-function( min, $values );\n}\n\n@function css-max( $values... ) {\n  @return css-function( max, $values );\n}\n\n\n@mixin prefix($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix==webkit {\n      -webkit-#{$property}: $value;\n    }\n\n    @else if $prefix==moz {\n      -moz-#{$property}: $value;\n    }\n\n    @else if $prefix==ms {\n      -ms-#{$property}: $value;\n    }\n\n    @else if $prefix==o {\n      -o-#{$property}: $value;\n    }\n\n    @else if $prefix==spec {\n      #{$property}: $value;\n    }\n\n    @else {\n      @warn 'unrecognized prefix: #{$prefix}';\n    }\n  }\n}\n\n\n%u-sr-only,\n%visually-hidden {\n  position: absolute !important;\n  overflow: hidden;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n  clip: rect(0 0 0 0);\n  word-wrap: normal !important;\n}\n\n\n@mixin placeholder-text {\n  ::-webkit-input-placeholder {\n      @content;\n  }\n  ::-moz-placeholder {\n      @content;\n  }\n  ::-o-placeholder {\n      @content;\n  }\n  ::-ms-input-placeholder {\n      @content;\n  }\n}"]}