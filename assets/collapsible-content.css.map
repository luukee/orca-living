{"version":3,"sources":["collapsible-content.scss","_mixins.scss"],"names":[],"mappings":"AAAA,qBACA,iBAAA,CACA,SAAA,CAGA,4BACA,mBAAA,CACA,gBAAA,CC+DM,0CD3DN,4BACA,mBAAA,CACA,gBAAA,CAAA,CAIA,mCACA,cAAA,CAGA,mCACA,cAAA,CCgDM,0CD5CN,mCACA,cAAA,CAGA,mCACA,cAAA,CAAA,CCuCM,0CDlCN,oCACA,0BAAA,CAAA,CAIA,oCACA,aAAA,CACA,oBAAA,CACA,mBAAA,CACA,iBAAA,CAGA,6BACA,qBAAA,CAGA,8BACA,kBAAA,CACA,YAAA,CCgBM,0CDZN,8BACA,kBAAA,CAAA,CAIA,+CACA,YAAA,CAGA,8EACA,eAAA,CAGA,gCACA,eAAA,CCFM,0CDMN,gCACA,YAAA,CAAA,CAIA,mCACA,2GAAA,CACA,oBAAA,CAGA,kGAEA,cAAA,CAGA,uDACA,aAAA,CAGA,mCACA,8CAAA,CAGA,qDACA,yBAAA,CACA,2BAAA,CAIA,4BCnCM,0CDqCN,+JAEA,iBAAA,CACA,eAAA,CAAA,CCxCM,0CD6CN,+JAEA,iBAAA,CAAA,CAAA","file":"collapsible-content.css","sourcesContent":["@import '../assets/mixins';.collapsible-content {\n  position: relative;\n  z-index: 0;\n}\n\n.collapsible-section-layout {\n  padding-bottom: 5rem;\n  padding-top: 5rem;\n}\n\n@include mq($medium-up) {\n  .collapsible-section-layout {\n    padding-bottom: 7rem;\n    padding-top: 7rem;\n  }\n}\n\n.collapsible-content__media--small {\n  height: 19.4rem;\n}\n\n.collapsible-content__media--large {\n  height: 43.5rem;\n}\n\n@include mq($medium-up) {\n  .collapsible-content__media--small {\n    height: 31.4rem;\n  }\n\n  .collapsible-content__media--large {\n    height: 69.5rem;\n  }\n}\n\n@include mq($medium-up) {\n  .collapsible-content__grid--reverse {\n    flex-direction: row-reverse;\n  }\n}\n\n.collapsible-content-wrapper-narrow {\n  margin: 0 auto;\n  padding-right: 1.5rem;\n  padding-left: 1.5rem;\n  max-width: 73.4rem;\n}\n\n.collapsible-content__header {\n  word-break: break-word;\n}\n\n.collapsible-content__heading {\n  margin-bottom: 2rem;\n  margin-top: 0;\n}\n\n@include mq($medium-up) {\n  .collapsible-content__heading {\n    margin-bottom: 3rem;\n  }\n}\n\n.collapsible-none-layout .accordion + .accordion {\n  border-top: 0;\n}\n\n.collapsible-row-layout .accordion:not(:first-child):not(.color-background-1) {\n  margin-top: 1rem;\n}\n\n.caption-with-letter-spacing + h2 {\n  margin-top: 1rem;\n}\n\n@include mq($medium-up) {\n  .collapsible-content .accordion {\n    margin-top: 0;\n  }\n}\n\n.collapsible-row-layout .accordion {\n  border: var(--text-boxes-border-width) solid rgba(var(--color-foreground),var(--text-boxes-border-opacity));\n  margin-bottom: 1.5rem;\n}\n\n.collapsible-row-layout .accordion summary,\n.collapsible-row-layout .accordion .accordion__content {\n  padding: 1.5rem;\n}\n\n.collapsible-row-layout .accordion .accordion__content {\n  padding-top: 0;\n}\n\n.collapsible-content summary:hover {\n  background: rgba(var(--color-foreground), 0.04);\n}\n\n.collapsible-content summary:hover .accordion__title {\n  text-decoration: underline;\n  text-underline-offset: 0.3rem;\n}\n\n/* check for flexbox gap in older Safari versions */\n@supports not (inset: 10px) {\n  @include mq($medium-up) {\n    .collapsible-content__grid:not(.collapsible-content__grid--reverse) .grid__item:last-child,\n    .collapsible-content__grid--reverse .collapsible-content__grid-item {\n      padding-left: 5rem;\n      padding-right: 0;\n    }\n  }\n\n  @include mq($large-up) {\n    .collapsible-content__grid:not(.collapsible-content__grid--reverse) .grid__item:last-child,\n    .collapsible-content__grid--reverse .collapsible-content__grid-item {\n      padding-left: 7rem;\n    }\n  }\n}\n","/*============================================================================\n  Grid Breakpoints and Class Names\n    - Do not change the variable names\n    - $grid-narrow is based on a Shopify breakpoint for checkout buttons\n==============================================================================*/\n$grid-narrow: 400px;\n$grid-medium: 750px;\n$grid-large: 990px;\n$grid-ex-large:1200px;\n$grid-widescreen: 1400px;\n$grid-gutter: 30px;\n$grid-gutter-mobile: 22px;\n\n$narrowish: 'narrow';\n$narrow: 'narrow';\n$not-narrow: 'not-narrow';\n$small: 'small';\n$medium: 'medium';\n$medium-down: 'medium-down';\n$medium-up: 'medium-up';\n$large: 'large';\n$large-down: 'large-down';\n$large-up: 'large-up';\n$ex-large: 'ex-large';\n$ex-large-up: 'ex-large-up';\n$widescreen: 'widescreen';\n\n/*============================================================================\n  Generate breakpoint-specific column widths and push classes\n    - Default column widths: $grid-breakpoint-has-widths: ($small, $medium-up);\n    - Default is no push classes\n==============================================================================*/\n$grid-breakpoint-has-widths: ($narrow, $not-narrow, $small, $medium-up, $medium, $medium-down, $large, $large-up, $large-down, $ex-large, $ex-large-up);\n$grid-breakpoint-has-push: $grid-breakpoint-has-widths;\n\n\n\n/*============================================================================\n  #Grid\n==============================================================================*/\n\n// The `$grid-breakpoints` list is used to build our media queries.\n// You can use these in the mq mixin.\n$grid-breakpoints: (\n    $narrow '(max-width: #{$grid-narrow})',\n    $not-narrow '(min-width: #{$grid-narrow + 1}) and (max-width: #{$grid-medium - 1})',\n    $small '(max-width: #{$grid-medium - 1})',\n    $medium '(min-width: #{$grid-medium}) and (max-width: #{$grid-large - 1})',\n    $medium-down '(max-width: #{$grid-large - 1})',\n    $medium-up '(min-width: #{$grid-medium})',\n    $large '(min-width: #{$grid-large}) and (max-width: #{$grid-ex-large - 1})',\n    $large-down '(max-width: #{$grid-ex-large - 1})',\n    $large-up '(min-width: #{$grid-large})',\n    $ex-large '(min-width: #{$grid-ex-large}) and (max-width: #{$grid-widescreen - 1})',\n    $ex-large-up '(min-width: #{$grid-ex-large})',\n    $widescreen '(min-width: #{$grid-widescreen})'\n);\n\n\n\n@mixin mq($mq) {\n  $breakpoint-found: false;\n\n  @each $breakpoint in $grid-breakpoints {\n    $name: nth($breakpoint, 1);\n    $declaration: nth($breakpoint, 2);\n\n    @if $mq == $name and $declaration {\n      $breakpoint-found: true;\n\n      @media only screen and #{$declaration} {\n        @content;\n      }\n    }\n  }\n\n  @if $breakpoint-found == false {\n    @warn 'Breakpoint \"#{$mq}\" does not exist';\n  }\n}\n\n\n// scss doesn't like min() and max(), so use these mixins to fix\n@function css-function( $function, $values... ) {\n  @return \n    $function\n    + unquote( '(' )\n    + $values\n    + unquote( ')' )\n  ;\n}\n\n@function css-min( $values... ) {\n  @return css-function( min, $values );\n}\n\n@function css-max( $values... ) {\n  @return css-function( max, $values );\n}\n\n\n@mixin prefix($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix==webkit {\n      -webkit-#{$property}: $value;\n    }\n\n    @else if $prefix==moz {\n      -moz-#{$property}: $value;\n    }\n\n    @else if $prefix==ms {\n      -ms-#{$property}: $value;\n    }\n\n    @else if $prefix==o {\n      -o-#{$property}: $value;\n    }\n\n    @else if $prefix==spec {\n      #{$property}: $value;\n    }\n\n    @else {\n      @warn 'unrecognized prefix: #{$prefix}';\n    }\n  }\n}\n\n\n%u-sr-only,\n%visually-hidden {\n  position: absolute !important;\n  overflow: hidden;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n  clip: rect(0 0 0 0);\n  word-wrap: normal !important;\n}\n\n\n@mixin placeholder-text {\n  &::-webkit-input-placeholder {\n      @content;\n  }\n  &::-moz-placeholder {\n      @content;\n  }\n  &::-o-placeholder {\n      @content;\n  }\n  &::-ms-input-placeholder {\n      @content;\n  }\n}"]}