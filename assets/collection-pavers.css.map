{"version":3,"sources":["collection-pavers.css"],"names":[],"mappings":"AAsEM,0CCnEN,uCACA,YAAA,CAAA,CAKA,6DACA,YAAA,CD4DM,0CC9DN,mCAMA,YAAA,CACA,yBAAA,CAAA,CDuDM,0CC9DN,mCAWA,+DACA,CAAA,CDkDM,0CC9DN,mCAiBA,6DACA,CAAA,CAIA,iDACA,YAAA,CACA,oCAAA,CAEA,mEACA,YAAA,CDmCM,0CCxCN,iDAQA,oCAAA,CAEA,mEACA,aAAA,CAAA,CAIA,6DACA,UAAA,CACA,cAAA,CAEA,gFACA,gBAAA,CAGA,iJACA,iBAAA,CAGA,+DACA,yBAAA,CAGA,gIACA,yCAAA,CAGA,iJACA,kBAAA,CAEA,qEACA,wBAAA,CACA,SAAA,CACA,WAAA,CACA,gBAAA,CACA,mCAAA,CACA,cAAA,CACA,yDAAA,CAKA,iDACA,eAAA,CACA,kBAAA,CACA,mBAAA,CDbM,0CCUN,iDAKA,gBAAA,CACA,kBAAA,CAAA","file":"collection-pavers.css","sourcesContent":["/*============================================================================\n  Grid Breakpoints and Class Names\n    - Do not change the variable names\n    - $grid-narrow is based on a Shopify breakpoint for checkout buttons\n==============================================================================*/\n$grid-narrow: 400px;\n$grid-medium: 750px;\n$grid-large: 990px;\n$grid-ex-large:1200px;\n$grid-widescreen: 1400px;\n$grid-gutter: 30px;\n$grid-gutter-mobile: 22px;\n\n$narrowish: 'narrow';\n$narrow: 'narrow';\n$not-narrow: 'not-narrow';\n$small: 'small';\n$medium: 'medium';\n$medium-down: 'medium-down';\n$medium-up: 'medium-up';\n$large: 'large';\n$large-down: 'large-down';\n$large-up: 'large-up';\n$ex-large: 'ex-large';\n$ex-large-up: 'ex-large-up';\n$widescreen: 'widescreen';\n\n/*============================================================================\n  Generate breakpoint-specific column widths and push classes\n    - Default column widths: $grid-breakpoint-has-widths: ($small, $medium-up);\n    - Default is no push classes\n==============================================================================*/\n$grid-breakpoint-has-widths: ($narrow, $not-narrow, $small, $medium-up, $medium, $medium-down, $large, $large-up, $large-down, $ex-large, $ex-large-up);\n$grid-breakpoint-has-push: $grid-breakpoint-has-widths;\n\n\n\n/*============================================================================\n  #Grid\n==============================================================================*/\n\n// The `$grid-breakpoints` list is used to build our media queries.\n// You can use these in the mq mixin.\n$grid-breakpoints: (\n    $narrow '(max-width: #{$grid-narrow})',\n    $not-narrow '(min-width: #{$grid-narrow + 1}) and (max-width: #{$grid-medium - 1})',\n    $small '(max-width: #{$grid-medium - 1})',\n    $medium '(min-width: #{$grid-medium}) and (max-width: #{$grid-large - 1})',\n    $medium-down '(max-width: #{$grid-large - 1})',\n    $medium-up '(min-width: #{$grid-medium})',\n    $large '(min-width: #{$grid-large}) and (max-width: #{$grid-ex-large - 1})',\n    $large-down '(max-width: #{$grid-ex-large - 1})',\n    $large-up '(min-width: #{$grid-large})',\n    $ex-large '(min-width: #{$grid-ex-large}) and (max-width: #{$grid-widescreen - 1})',\n    $ex-large-up '(min-width: #{$grid-ex-large})',\n    $widescreen '(min-width: #{$grid-widescreen})'\n);\n\n\n\n@mixin mq($mq) {\n  $breakpoint-found: false;\n\n  @each $breakpoint in $grid-breakpoints {\n    $name: nth($breakpoint, 1);\n    $declaration: nth($breakpoint, 2);\n\n    @if $mq == $name and $declaration {\n      $breakpoint-found: true;\n\n      @media only screen and #{$declaration} {\n        @content;\n      }\n    }\n  }\n\n  @if $breakpoint-found == false {\n    @warn 'Breakpoint \"#{$mq}\" does not exist';\n  }\n}\n\n\n// scss doesn't like min() and max(), so use these mixins to fix\n@function css-function( $function, $values... ) {\n  @return \n    $function\n    + unquote( '(' )\n    + $values\n    + unquote( ')' )\n  ;\n}\n\n@function css-min( $values... ) {\n  @return css-function( min, $values );\n}\n\n@function css-max( $values... ) {\n  @return css-function( max, $values );\n}\n\n\n@mixin prefix($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix==webkit {\n      -webkit-#{$property}: $value;\n    }\n\n    @else if $prefix==moz {\n      -moz-#{$property}: $value;\n    }\n\n    @else if $prefix==ms {\n      -ms-#{$property}: $value;\n    }\n\n    @else if $prefix==o {\n      -o-#{$property}: $value;\n    }\n\n    @else if $prefix==spec {\n      #{$property}: $value;\n    }\n\n    @else {\n      @warn 'unrecognized prefix: #{$prefix}';\n    }\n  }\n}\n\n\n%u-sr-only,\n%visually-hidden {\n  position: absolute !important;\n  overflow: hidden;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n  clip: rect(0 0 0 0);\n  word-wrap: normal !important;\n}\n\n\n@mixin placeholder-text {\n  ::-webkit-input-placeholder {\n      @content;\n  }\n  ::-moz-placeholder {\n      @content;\n  }\n  ::-o-placeholder {\n      @content;\n  }\n  ::-ms-input-placeholder {\n      @content;\n  }\n}","@import '../assets/mixins';.template--collection {\n\n    @include mq($medium-down) {\n        .side-navigation {\n            display: none;\n        }\n    }\n\n    #MainContent {\n        [data-preview-collection] {\n            display: none;\n        }\n\n        @include mq($medium-down) {\n            display: grid;\n            grid-template-columns: 1fr;\n        }\n\n        @include mq($medium-up) {\n            grid-template-areas: \n                'left left'\n                'banner banner'\n                'middle middle';\n        }\n        @include mq($large-up) {\n            grid-template-areas: \n            'left banner banner'\n            'left middle middle';\n        }\n\n        .product-grid {\n            display: grid;\n            grid-template-columns: repeat(2,1fr);\n\n            .grid__item:empty {\n                display: none;\n            }\n            @include mq($medium-up) {\n                grid-template-columns: repeat(4,1fr);\n\n                .grid__item:empty {\n                    display: block;\n                }\n            }\n\n            .grid__item {\n                width: 100%;\n                max-width: none;\n                \n                .card__information {\n                    grid-row-start: 1;\n                }\n                \n                .h5,.card__information {\n                    text-align: center;\n                }\n\n                a {\n                    text-decoration: underline;\n                }\n\n                a,.h5 {\n                    padding-block: var(--base-gutter--quarter);\n                }\n\n                .button,.button::after {\n                    border-radius: 40px;\n                }\n                .button {\n                    background-color: #211E1E;\n                    width: 90%;\n                    margin: auto;\n                    font-size: 1.3rem;\n                    color: rgb(var(--color-button-text));\n                    min-width: auto;\n                    min-height: calc(3.5rem + var(--buttons-border-width) * 2);;\n                }\n            }\n        }\n        \n        & > :nth-child(2) {\n            padding-right: 0;\n            grid-column: span 3;\n            padding-inline: 4rem;\n            @include mq($medium-down) {\n                padding-inline: 0;\n                grid-column: span 3;\n            }\n        }\n    }\n}"]}