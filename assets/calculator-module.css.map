{"version":3,"sources":["calculator-module.scss","_mixins.scss"],"names":[],"mappings":"AAGA,0BACA,QAAA,CACA,YAAA,CACA,WAAA,CACA,gCAAA,CACA,kBAAA,CACA,iDAAA,CACA,iDAAA,CAEA,iEAEA,kBAAA,CAKA,oCACA,cAAA,CACA,KAAA,CACA,MAAA,CACA,WAAA,CACA,UAAA,CACA,cAAA,CACA,8CAAA,CACA,mBAAA,CACA,SAAA,CACA,4BAAA,CAOA,gCACA,2BAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,eAAA,CACA,sBAAA,CACA,sBAAA,CACA,kCAAA,CACA,SAAA,CACA,QAAA,CACA,WAAA,CACA,YAAA,CACA,cAAA,CACA,yBAAA,CACA,2BAAA,CAIA,wCACA,cAAA,CACA,aAAA,CACA,UAAA,CACA,QAAA,CACA,8CAAA,CACA,+BAAA,CACA,gCAAA,CACA,eAAA,CACA,YAAA,CACA,qBAAA,CACA,6BAAA,CACA,mBAAA,CACA,SAAA,CACA,WAAA,CACA,4BAAA,CACA,6CAAA,CAEA,0CACA,UAAA,CAGA,sDACA,sCAAA,CAGA,6CACA,sBAAA,CACA,eAAA,CAGA,sDACA,UAAA,CACA,YAAA,CACA,qBAAA,CACA,6BAAA,CAMA,oDACA,kBAAA,CACA,SAAA,CAGA,wDACA,SAAA,CACA,SAAA,CACA,kBAAA,CAMA,8BACA,mCAAA,CAGA,+CACA,iBAAA,CAEA,qDACA,UAAA,CACA,wCAAA,CACA,cAAA,CACA,WAAA,CACA,sBAAA,CACA,wDAAA,CAEA,gMAGA,YAAA,CACA,yDAAA,CCmBE,2EDZF,UAAA,CACA,sCAAA,CCcE,kEDfF,UAAA,CACA,sCAAA,CCiBE,gEDlBF,UAAA,CACA,sCAAA,CCoBE,uEDrBF,UAAA,CACA,sCAAA,CAGA,oDACA,iBAAA,CACA,OAAA,CACA,OAAA,CACA,0BAAA,CACA,aAAA,CACA,SAAA,CAMA,mCACA,YAAA,CACA,qCACA,mCAAA,CAKA,0CACA,UAAA,CAOA,gDACA,mCAAA,CACA,aAAA,CAGA,+DACA,UAAA,CACA,iBAAA,CAEA,sEACA,2BAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,eAAA,CACA,sBAAA,CACA,sBAAA,CACA,sCAAA,CACA,SAAA,CACA,QAAA,CACA,WAAA,CACA,YAAA,CACA,cAAA,CACA,yBAAA,CACA,2BAAA","file":"calculator-module.css","sourcesContent":["@import '../assets/mixins';calculator-module {\n  // position: relative;\n\n  .button {\n    height: 0;\n    min-height: 0;\n    min-width: 0;\n    padding: var(--base-gutter--half);\n    border-radius: 50px;\n    background-color: rgba(var(--color-background), 1);\n    color: rgba(var(--color-foreground), 1) !important;\n\n    &:before, \n    &:after {\n      border-radius: 50px;\n      // background-color: rgba(var(--color-background), 1);\n    }\n  }\n\n  .background-close {\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    z-index: 999999;\n    background: rgba(var(--color-background), 0.75);\n    pointer-events: none;\n    opacity: 0;\n    transition: all .25s ease-out;\n\n  }\n\n\n  calbtn {\n\n    button {\n      display: -webkit-inline-flex;\n      appearance: none;\n      background: transparent;\n      background: transparent;\n      color: rgb(var(--color-foreground));\n      padding: 0;\n      margin: 0;\n      border: none;\n      outline: none;\n      cursor: pointer;\n      text-decoration: underline;\n      text-underline-offset: 0.5rem;\n    }\n  }\n  \n  .calculator-container {\n    position: fixed;\n    color: rgb(131 120 104 / 1);\n    bottom: 0px;\n    left: 0px;\n    height: calc(100vh - var(--header-height,90px));\n    width: clamp(320px, 75%, 1000px);\n    padding: var(--base-gutter--half);\n    z-index: 9999999;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    pointer-events: none;\n    opacity: 0;\n    bottom: -25%;\n    transition: all .25s ease-out;\n    background-color: rgb(var(--color-foreground));\n\n    > * {\n      width: 100%;\n    }\n    \n    *:not(button) {\n      color: rgba(var(--color-background),1);\n    }\n\n    .rte {\n      align-items: flex-start;\n      max-width: 300px;\n    }\n\n    .project-area {\n      height: 55%;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n    }\n  }\n\n  calculator {\n\n    &.open .background-close {\n      pointer-events: all;\n      opacity: 1; \n    }\n\n    &.open .calculator-container {\n      opacity: 1;\n      bottom: 0%;\n      pointer-events: all;\n    }\n  }\n\n  calculate {\n\n    > * {\n      margin: 0 0 var(--base-gutter--half);\n    }\n\n    .calculator__input {\n      position: relative;\n\n      input {\n        width: 100%;\n        padding: var(--base-gutter--quarter) 35px;\n        padding-left: 0;\n        border: none;\n        background: transparent;\n        border-bottom: 1px solid rgba(var(--color-background),1);\n\n        &:focus, \n        &:focus-visible, \n        &:focus-within {\n          outline: none;\n          box-shadow: 0 4px 0px 0px rgba(var(--color-background),1);\n        }\n\n      }\n\n\n      @include placeholder-text {\n        opacity: 0.6;\n        color: rgba(var(--color-background),1);\n      }\n\n      span {\n        position: absolute;\n        top: 50%;\n        right: 0;\n        transform: translateY(-50%);\n        display: block;\n        z-index: 2;\n      }\n\n    }\n  }\n\n  .recommendations {\n    display: none;\n    > * {\n      margin: 0 0 var(--base-gutter--half);\n    }\n  }\n\n  quantity-updater {\n    button {\n      width: 100%;\n    }\n  }\n\n\n  .calculator__finish-buttons {\n\n    > * {\n      margin: 0 0 var(--base-gutter--half);\n      display: block;\n    }\n  \n    calculator-close {\n      width: 100%;\n      text-align: center;\n\n      button {\n        display: -webkit-inline-flex;\n        appearance: none;\n        background: transparent;\n        background: transparent;\n        color: rgba(var(--color-background),1);\n        padding: 0;\n        margin: 0;\n        border: none;\n        outline: none;\n        cursor: pointer;\n        text-decoration: underline;\n        text-underline-offset: 0.5rem;\n      }\n    }\n  }\n\n\n\n\n  @include mq($medium-up) {\n    \n  }\n\n  @include mq($large-up) {\n    \n  }\n\n}\n","/*============================================================================\n  Grid Breakpoints and Class Names\n    - Do not change the variable names\n    - $grid-narrow is based on a Shopify breakpoint for checkout buttons\n==============================================================================*/\n$grid-narrow: 400px;\n$grid-medium: 750px;\n$grid-large: 990px;\n$grid-ex-large:1200px;\n$grid-widescreen: 1400px;\n$grid-gutter: 30px;\n$grid-gutter-mobile: 22px;\n\n$narrowish: 'narrow';\n$narrow: 'narrow';\n$not-narrow: 'not-narrow';\n$small: 'small';\n$medium: 'medium';\n$medium-down: 'medium-down';\n$medium-up: 'medium-up';\n$large: 'large';\n$large-down: 'large-down';\n$large-up: 'large-up';\n$ex-large: 'ex-large';\n$ex-large-up: 'ex-large-up';\n$widescreen: 'widescreen';\n\n/*============================================================================\n  Generate breakpoint-specific column widths and push classes\n    - Default column widths: $grid-breakpoint-has-widths: ($small, $medium-up);\n    - Default is no push classes\n==============================================================================*/\n$grid-breakpoint-has-widths: ($narrow, $not-narrow, $small, $medium-up, $medium, $medium-down, $large, $large-up, $large-down, $ex-large, $ex-large-up);\n$grid-breakpoint-has-push: $grid-breakpoint-has-widths;\n\n\n\n/*============================================================================\n  #Grid\n==============================================================================*/\n\n// The `$grid-breakpoints` list is used to build our media queries.\n// You can use these in the mq mixin.\n$grid-breakpoints: (\n    $narrow '(max-width: #{$grid-narrow})',\n    $not-narrow '(min-width: #{$grid-narrow + 1}) and (max-width: #{$grid-medium - 1})',\n    $small '(max-width: #{$grid-medium - 1})',\n    $medium '(min-width: #{$grid-medium}) and (max-width: #{$grid-large - 1})',\n    $medium-down '(max-width: #{$grid-large - 1})',\n    $medium-up '(min-width: #{$grid-medium})',\n    $large '(min-width: #{$grid-large}) and (max-width: #{$grid-ex-large - 1})',\n    $large-down '(max-width: #{$grid-ex-large - 1})',\n    $large-up '(min-width: #{$grid-large})',\n    $ex-large '(min-width: #{$grid-ex-large}) and (max-width: #{$grid-widescreen - 1})',\n    $ex-large-up '(min-width: #{$grid-ex-large})',\n    $widescreen '(min-width: #{$grid-widescreen})'\n);\n\n\n\n@mixin mq($mq) {\n  $breakpoint-found: false;\n\n  @each $breakpoint in $grid-breakpoints {\n    $name: nth($breakpoint, 1);\n    $declaration: nth($breakpoint, 2);\n\n    @if $mq == $name and $declaration {\n      $breakpoint-found: true;\n\n      @media only screen and #{$declaration} {\n        @content;\n      }\n    }\n  }\n\n  @if $breakpoint-found == false {\n    @warn 'Breakpoint \"#{$mq}\" does not exist';\n  }\n}\n\n\n// scss doesn't like min() and max(), so use these mixins to fix\n@function css-function( $function, $values... ) {\n  @return \n    $function\n    + unquote( '(' )\n    + $values\n    + unquote( ')' )\n  ;\n}\n\n@function css-min( $values... ) {\n  @return css-function( min, $values );\n}\n\n@function css-max( $values... ) {\n  @return css-function( max, $values );\n}\n\n\n@mixin prefix($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix==webkit {\n      -webkit-#{$property}: $value;\n    }\n\n    @else if $prefix==moz {\n      -moz-#{$property}: $value;\n    }\n\n    @else if $prefix==ms {\n      -ms-#{$property}: $value;\n    }\n\n    @else if $prefix==o {\n      -o-#{$property}: $value;\n    }\n\n    @else if $prefix==spec {\n      #{$property}: $value;\n    }\n\n    @else {\n      @warn 'unrecognized prefix: #{$prefix}';\n    }\n  }\n}\n\n\n%u-sr-only,\n%visually-hidden {\n  position: absolute !important;\n  overflow: hidden;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n  clip: rect(0 0 0 0);\n  word-wrap: normal !important;\n}\n\n\n@mixin placeholder-text {\n  ::-webkit-input-placeholder {\n      @content;\n  }\n  ::-moz-placeholder {\n      @content;\n  }\n  ::-o-placeholder {\n      @content;\n  }\n  ::-ms-input-placeholder {\n      @content;\n  }\n}"]}