{"version":3,"sources":["quick-add.css"],"names":[],"mappings":"AAAA,WACA,iBAAA,CACA,gBAAA,CACA,eAAA,CACA,SAAA,CAGA,uBACA,oBAAA,CAGA,iBACA,qBAAA,CACA,SAAA,CACA,cAAA,CACA,iBAAA,CACA,UAAA,CACA,aAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,6CAAA,CACA,WAAA,CAGA,uBACA,SAAA,CACA,kBAAA,CACA,WAAA,CAGA,0BACA,6BAAA,CACA,iBAAA,CACA,KAAA,CACA,QAAA,CACA,0BAAA,CACA,wCAAA,CACA,UAAA,CACA,6CAAA,CACA,eAAA,CACA,2BAAA,CACA,uBAAA,CC4BM,0CDxBN,0BACA,4BAAA,CACA,qCAAA,CACA,SAAA,CACA,sDAAA,CACA,eAAA,CAGA,yCACA,QAAA,CACA,UAAA,CAAA,CCcM,0CDTN,0BACA,SAAA,CAAA,CAIA,8BACA,cAAA,CAGA,+BACA,uBAAA,CACA,oBAAA,CACA,YAAA,CACA,eAAA,CACA,4BAAA,CACA,WAAA,CAGA,iCACA,WAAA,CACA,aAAA,CACA,cAAA,CACA,UAAA,CCbM,0CDiBN,wDACA,kBAAA,CACA,mBAAA,CAGA,0BACA,iCAAA,CAGA,iCACA,eAAA,CAGA,8DACA,+DAAA,CAAA,CAIA,yBACA,6CAAA,CACA,qDAAA,CACA,iBAAA,CACA,yCAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,cAAA,CACA,cAAA,CACA,SAAA,CACA,UAAA,CACA,cAAA,CACA,UAAA,CACA,YAAA,CAGA,+BACA,yCAAA,CAGA,+BACA,WAAA,CACA,QAAA,CACA,YAAA,CAGA,uEACA,aAAA,CAGA,mKAGA,uBAAA,CAGA,uCACA,gBAAA,CAGA,6DACA,eAAA,CAGA,qDACA,aAAA,CACA,UAAA,CAGA,wCACA,KAAA,CACA,iBAAA,CCvFM,0CD2FN,yEACA,aAAA,CACA,4DAAA,CAGA,wEACA,iBAAA,CACA,aAAA,CACA,4DAAA,CAGA,0GACA,cAAA,CACA,UAAA,CAGA,oEACA,YAAA,CAAA,CAIA,4BACA,SAAA,CAGA,mCACA,YAAA,CAGA,kCACA,aAAA,CACA,oBAAA,CAGA,wCACA,kCAAA,CACA,yBAAA,CACA,2BAAA,CACA,+BAAA,CAGA,uCACA,iBAAA,CAGA,mBACA,aAAA,CACA,cAAA,CACA,qBAAA,CAGA,0DACA,4GAAA,CC/IM,0CDmJN,0DACA,+BAAA,CAAA","file":"quick-add.css","sourcesContent":["@import '../assets/mixins';.quick-add {\n  position: relative;\n  grid-row-start: 4;\n  margin: 0 0 1rem;\n  z-index: 1;\n}\n\n.card--card .quick-add {\n  margin: 0 1.3rem 1rem;\n}\n\n.quick-add-modal {\n  box-sizing: border-box;\n  opacity: 0;\n  position: fixed;\n  visibility: hidden;\n  z-index: -1;\n  margin: 0 auto;\n  top: 0;\n  left: 0;\n  width: 100%;\n  background: rgba(var(--color-foreground), 0.2);\n  height: 100%;\n}\n\n.quick-add-modal[open] {\n  opacity: 1;\n  visibility: visible;\n  z-index: 101;\n}\n\n.quick-add-modal__content {\n  --modal-height-offset: 3.2rem;\n  position: absolute;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  margin: var(--modal-height-offset) auto 0;\n  width: 100%;\n  background-color: rgb(var(--color-background));\n  overflow: hidden;\n  max-width: var(--page-width);\n  width: calc(100% - 3rem);\n}\n\n@include mq($medium-up) {\n  .quick-add-modal__content {\n    --modal-height-offset: 10rem;\n    margin-top: var(--modal-height-offset);\n    width: 80%;\n    max-height: calc(100% - var(--modal-height-offset) * 2);\n    overflow-y: auto;\n  }\n\n  quick-add-modal .quick-add-modal__toggle {\n    top: 2rem;\n    right: 2rem;\n  }\n}\n\n@include mq($large-up) {\n  .quick-add-modal__content {\n    width: 70%;\n  }\n}\n\n.quick-add-modal__content img {\n  max-width: 100%;\n}\n\n.quick-add-modal__content-info {\n  --modal-padding: 2.5rem;\n  padding-right: 4.4rem;\n  display: flex;\n  overflow-y: auto;\n  padding: var(--modal-padding);\n  height: 100%;\n}\n\n.quick-add-modal__content-info > * {\n  height: auto;\n  margin: 0 auto;\n  max-width: 100%;\n  width: 100%;\n}\n\n@include mq($small) {\n  quick-add-modal .slider .product__media-item.grid__item {\n    margin-left: 1.5rem;\n    margin-right: 1.5rem;\n  }\n\n  .quick-add-modal__content {\n    bottom: var(--modal-height-offset);\n  }\n\n  .quick-add-modal__content-info > * {\n    max-height: 100%;\n  }\n\n  quick-add-modal .product--mobile-columns .product__media-item {\n    width: calc(100% - 3rem - var(--grid-mobile-horizontal-spacing));\n  }\n}\n\n.quick-add-modal__toggle {\n  background-color: rgb(var(--color-background));\n  border: 0.1rem solid rgba(var(--color-foreground), 0.1);\n  border-radius: 50%;\n  color: rgba(var(--color-foreground), 0.55);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  padding: 1.2rem;\n  z-index: 5;\n  width: 4rem;\n  position: fixed;\n  top: 1.5rem;\n  right: 1.5rem;\n}\n\n.quick-add-modal__toggle:hover {\n  color: rgba(var(--color-foreground), 0.75);\n}\n\n.quick-add-modal__toggle .icon {\n  height: auto;\n  margin: 0;\n  width: 2.2rem;\n}\n\nquick-add-modal .product:not(.featured-product) .product__view-details {\n  display: block;\n}\n\nquick-add-modal .quick-add-hidden,\nquick-add-modal .product__modal-opener:not(.product__modal-opener--image),\nquick-add-modal .product__media-item:not(:first-child) {\n  display: none !important;\n}\n\nquick-add-modal .slider.slider--mobile {\n  overflow: visible;\n}\n\nquick-add-modal .product__column-sticky .product__media-list {\n  margin-bottom: 0;\n}\n\nquick-add-modal .product__media-list .deferred-media {\n  display: block;\n  width: 100%;\n}\n\nquick-add-modal .product__column-sticky {\n  top: 0;\n  position: relative;\n}\n\n@include mq($medium-up) {\n  quick-add-modal .product:not(.product--no-media) .product__media-wrapper {\n    max-width: 45%;\n    width: calc(45% - var(--grid-desktop-horizontal-spacing) / 2);\n  }\n\n  quick-add-modal .product:not(.product--no-media) .product__info-wrapper {\n    padding-left: 4rem;\n    max-width: 54%;\n    width: calc(54% - var(--grid-desktop-horizontal-spacing) / 2)\n  }\n\n  quick-add-modal .product--columns .product__media-item:not(.product__media-item--single):not(:only-child) {\n    max-width: 100%;\n    width: 100%;\n  }\n\n  quick-add-modal .thumbnail-slider .thumbnail-list.slider--tablet-up {\n    display: none;\n  }\n}\n\nquick-add-modal .page-width {\n  padding: 0;\n}\n\nquick-add-modal .product__title > h1 {\n  display: none;\n}\n\nquick-add-modal .product__title > a {\n  display: block;\n  text-decoration: none;\n}\n\nquick-add-modal .product__title > a:hover {\n  color: rgb(var(--color-foreground));\n  text-decoration: underline;\n  text-underline-offset: 0.2rem;\n  text-decoration-thickness: 0.3rem;\n}\n\nquick-add-modal .product-form__buttons {\n  max-width: initial;\n}\n\n.quick-add__submit {\n  padding: 0.8rem;\n  min-width: 100%;\n  box-sizing: border-box;\n}\n\nquick-add-modal .product-media-container.constrain-height {\n  --viewport-offset: calc((var(--modal-height-offset) + var(--modal-padding) + var(--popup-border-width)) * 2);\n}\n\n@include mq($medium-up) {\n  quick-add-modal .product-media-container.constrain-height {\n    --constrained-min-height: 400px;\n  }\n}\n","/*============================================================================\n  Grid Breakpoints and Class Names\n    - Do not change the variable names\n    - $grid-narrow is based on a Shopify breakpoint for checkout buttons\n==============================================================================*/\n$grid-narrow: 400px;\n$grid-medium: 750px;\n$grid-large: 990px;\n$grid-ex-large:1200px;\n$grid-widescreen: 1400px;\n$grid-gutter: 30px;\n$grid-gutter-mobile: 22px;\n\n$narrowish: 'narrow';\n$narrow: 'narrow';\n$not-narrow: 'not-narrow';\n$small: 'small';\n$medium: 'medium';\n$medium-down: 'medium-down';\n$medium-up: 'medium-up';\n$large: 'large';\n$large-down: 'large-down';\n$large-up: 'large-up';\n$ex-large: 'ex-large';\n$ex-large-up: 'ex-large-up';\n$widescreen: 'widescreen';\n\n/*============================================================================\n  Generate breakpoint-specific column widths and push classes\n    - Default column widths: $grid-breakpoint-has-widths: ($small, $medium-up);\n    - Default is no push classes\n==============================================================================*/\n$grid-breakpoint-has-widths: ($narrow, $not-narrow, $small, $medium-up, $medium, $medium-down, $large, $large-up, $large-down, $ex-large, $ex-large-up);\n$grid-breakpoint-has-push: $grid-breakpoint-has-widths;\n\n\n\n/*============================================================================\n  #Grid\n==============================================================================*/\n\n// The `$grid-breakpoints` list is used to build our media queries.\n// You can use these in the mq mixin.\n$grid-breakpoints: (\n    $narrow '(max-width: #{$grid-narrow})',\n    $not-narrow '(min-width: #{$grid-narrow + 1}) and (max-width: #{$grid-medium - 1})',\n    $small '(max-width: #{$grid-medium - 1})',\n    $medium '(min-width: #{$grid-medium}) and (max-width: #{$grid-large - 1})',\n    $medium-down '(max-width: #{$grid-large - 1})',\n    $medium-up '(min-width: #{$grid-medium})',\n    $large '(min-width: #{$grid-large}) and (max-width: #{$grid-ex-large - 1})',\n    $large-down '(max-width: #{$grid-ex-large - 1})',\n    $large-up '(min-width: #{$grid-large})',\n    $ex-large '(min-width: #{$grid-ex-large}) and (max-width: #{$grid-widescreen - 1})',\n    $ex-large-up '(min-width: #{$grid-ex-large})',\n    $widescreen '(min-width: #{$grid-widescreen})'\n);\n\n\n\n@mixin mq($mq) {\n  $breakpoint-found: false;\n\n  @each $breakpoint in $grid-breakpoints {\n    $name: nth($breakpoint, 1);\n    $declaration: nth($breakpoint, 2);\n\n    @if $mq == $name and $declaration {\n      $breakpoint-found: true;\n\n      @media only screen and #{$declaration} {\n        @content;\n      }\n    }\n  }\n\n  @if $breakpoint-found == false {\n    @warn 'Breakpoint \"#{$mq}\" does not exist';\n  }\n}\n\n\n// scss doesn't like min() and max(), so use these mixins to fix\n@function css-function( $function, $values... ) {\n  @return \n    $function\n    + unquote( '(' )\n    + $values\n    + unquote( ')' )\n  ;\n}\n\n@function css-min( $values... ) {\n  @return css-function( min, $values );\n}\n\n@function css-max( $values... ) {\n  @return css-function( max, $values );\n}\n\n\n@mixin prefix($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix==webkit {\n      -webkit-#{$property}: $value;\n    }\n\n    @else if $prefix==moz {\n      -moz-#{$property}: $value;\n    }\n\n    @else if $prefix==ms {\n      -ms-#{$property}: $value;\n    }\n\n    @else if $prefix==o {\n      -o-#{$property}: $value;\n    }\n\n    @else if $prefix==spec {\n      #{$property}: $value;\n    }\n\n    @else {\n      @warn 'unrecognized prefix: #{$prefix}';\n    }\n  }\n}\n\n\n%u-sr-only,\n%visually-hidden {\n  position: absolute !important;\n  overflow: hidden;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n  clip: rect(0 0 0 0);\n  word-wrap: normal !important;\n}\n\n\n@mixin placeholder-text {\n  &::-webkit-input-placeholder {\n      @content;\n  }\n  &::-moz-placeholder {\n      @content;\n  }\n  &::-o-placeholder {\n      @content;\n  }\n  &::-ms-input-placeholder {\n      @content;\n  }\n}"]}