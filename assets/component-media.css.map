{"version":3,"sources":["component-media.css"],"names":[],"mappings":"AAkIA,0DAEE,4BAAA,CACA,eAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,SAAA,CACA,QAAA,CACA,kBAAA,CACA,2BAAA,CC1IF,OACA,aAAA,CACA,mDAAA,CACA,iBAAA,CACA,eAAA,CAGA,oBACA,4BAAA,CAGA,4EAEA,aAAA,CACA,cAAA,CACA,iBAAA,CACA,KAAA,CACA,MAAA,CACA,WAAA,CACA,UAAA,CAGA,WACA,mBAAA,CAAA,gBAAA,CACA,gCAAA,CAAA,6BAAA,CACA,2DAAA,CAGA,eACA,mBAAA,CAGA,iBACA,mBAAA,CAGA,kBACA,oBAAA,CAGA,gBACA,kBAAA,CAGA,aACA,qBAAA,CAGA,eACA,mBAAA,CACA,iBAAA,CAGA,mCACA,SAAA,CDcM,0CCVN,gBACA,kBAAA,CAAA,CAIA,eACA,aAAA,CAOA,OACA,YAAA,CACA,iBAAA,CACA,mBAAA,CAGA,eACA,UAAA,CACA,OAAA,CACA,QAAA,CACA,mCAAA,CAKA,uBACA,iBAAA,CACA,iGAAA,CACA,iCAAA,CACA,2BAAA,CACA,6CAAA,CAGA,6BACA,UAAA,CACA,iBAAA,CACA,wCAAA,CACA,0CAAA,CACA,2CAAA,CACA,yCAAA,CACA,iCAAA,CACA,2KAAA,CACA,UAAA,CACA,mBAAA,CAGA,kCACA,0BAAA,CAGA,wCACA,YAAA,CAGA,0HAIA,mEAAA,CAGA,yGAGA,eAAA,CACA,gBAAA,CACA,iBAAA,CAIA,8CAEA,iBAAA,CACA,UAAA,CACA,aAAA,CACA,eAAA,CACA,wEACA,kBAAA,CAGA,4CAEA,aAAA,CACA,aAAA,CACA,oDACA,iBAAA,CACA,KAAA,CACA,MAAA,CACA,OAAA,CACA,UAAA,CACA,WAAA,CACA,mBAAA,CAAA,gBAAA,CACA,yBAAA,CAAA,sBAAA,CAQA,UACA,iBAAA,CACA,UAAA,CACA,aAAA,CACA,cACA,iBAAA,CACA,KAAA,CACA,MAAA,CACA,OAAA,CACA,UAAA,CACA,WAAA,CACA,mBAAA,CAAA,gBAAA","file":"component-media.css","sourcesContent":["/*============================================================================\n  Grid Breakpoints and Class Names\n    - Do not change the variable names\n    - $grid-narrow is based on a Shopify breakpoint for checkout buttons\n==============================================================================*/\n$grid-narrow: 400px;\n$grid-medium: 750px;\n$grid-large: 990px;\n$grid-ex-large:1200px;\n$grid-widescreen: 1400px;\n$grid-gutter: 30px;\n$grid-gutter-mobile: 22px;\n\n$narrowish: 'narrow';\n$narrow: 'narrow';\n$not-narrow: 'not-narrow';\n$small: 'small';\n$medium: 'medium';\n$medium-down: 'medium-down';\n$medium-up: 'medium-up';\n$large: 'large';\n$large-down: 'large-down';\n$large-up: 'large-up';\n$ex-large: 'ex-large';\n$ex-large-up: 'ex-large-up';\n$widescreen: 'widescreen';\n\n/*============================================================================\n  Generate breakpoint-specific column widths and push classes\n    - Default column widths: $grid-breakpoint-has-widths: ($small, $medium-up);\n    - Default is no push classes\n==============================================================================*/\n$grid-breakpoint-has-widths: ($narrow, $not-narrow, $small, $medium-up, $medium, $medium-down, $large, $large-up, $large-down, $ex-large, $ex-large-up);\n$grid-breakpoint-has-push: $grid-breakpoint-has-widths;\n\n\n\n/*============================================================================\n  #Grid\n==============================================================================*/\n\n// The `$grid-breakpoints` list is used to build our media queries.\n// You can use these in the mq mixin.\n$grid-breakpoints: (\n    $narrow '(max-width: #{$grid-narrow})',\n    $not-narrow '(min-width: #{$grid-narrow + 1}) and (max-width: #{$grid-medium - 1})',\n    $small '(max-width: #{$grid-medium - 1})',\n    $medium '(min-width: #{$grid-medium}) and (max-width: #{$grid-large - 1})',\n    $medium-down '(max-width: #{$grid-large - 1})',\n    $medium-up '(min-width: #{$grid-medium})',\n    $large '(min-width: #{$grid-large}) and (max-width: #{$grid-ex-large - 1})',\n    $large-down '(max-width: #{$grid-ex-large - 1})',\n    $large-up '(min-width: #{$grid-large})',\n    $ex-large '(min-width: #{$grid-ex-large}) and (max-width: #{$grid-widescreen - 1})',\n    $ex-large-up '(min-width: #{$grid-ex-large})',\n    $widescreen '(min-width: #{$grid-widescreen})'\n);\n\n\n\n@mixin mq($mq) {\n  $breakpoint-found: false;\n\n  @each $breakpoint in $grid-breakpoints {\n    $name: nth($breakpoint, 1);\n    $declaration: nth($breakpoint, 2);\n\n    @if $mq == $name and $declaration {\n      $breakpoint-found: true;\n\n      @media only screen and #{$declaration} {\n        @content;\n      }\n    }\n  }\n\n  @if $breakpoint-found == false {\n    @warn 'Breakpoint \"#{$mq}\" does not exist';\n  }\n}\n\n\n// scss doesn't like min() and max(), so use these mixins to fix\n@function css-function( $function, $values... ) {\n  @return \n    $function\n    + unquote( '(' )\n    + $values\n    + unquote( ')' )\n  ;\n}\n\n@function css-min( $values... ) {\n  @return css-function( min, $values );\n}\n\n@function css-max( $values... ) {\n  @return css-function( max, $values );\n}\n\n\n@mixin prefix($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix==webkit {\n      -webkit-#{$property}: $value;\n    }\n\n    @else if $prefix==moz {\n      -moz-#{$property}: $value;\n    }\n\n    @else if $prefix==ms {\n      -ms-#{$property}: $value;\n    }\n\n    @else if $prefix==o {\n      -o-#{$property}: $value;\n    }\n\n    @else if $prefix==spec {\n      #{$property}: $value;\n    }\n\n    @else {\n      @warn 'unrecognized prefix: #{$prefix}';\n    }\n  }\n}\n\n\n%u-sr-only,\n%visually-hidden {\n  position: absolute !important;\n  overflow: hidden;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n  clip: rect(0 0 0 0);\n  word-wrap: normal !important;\n}\n\n\n@mixin placeholder-text {\n  &::-webkit-input-placeholder {\n      @content;\n  }\n  &::-moz-placeholder {\n      @content;\n  }\n  &::-o-placeholder {\n      @content;\n  }\n  &::-ms-input-placeholder {\n      @content;\n  }\n}","@import '../assets/mixins';\n/* component-media */\n.media {\n  display: block;\n  background-color: rgba(var(--color-foreground), 0.1);\n  position: relative;\n  overflow: hidden;\n}\n\n.media--transparent {\n  background-color: transparent;\n}\n\n.media > *:not(.zoom):not(.deferred-media__poster-button),\n.media model-viewer {\n  display: block;\n  max-width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n}\n\n.media > img {\n  object-fit: cover;\n  object-position: center center;\n  transition: opacity 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n}\n\n.media--square {\n  padding-bottom: 100%;\n}\n\n.media--portrait {\n  padding-bottom: 125%;\n}\n\n.media--landscape {\n  padding-bottom: 66.6%;\n}\n\n.media--cropped {\n  padding-bottom: 56%;\n}\n\n.media--16-9 {\n  padding-bottom: 56.25%;\n}\n\n.media--circle {\n  padding-bottom: 100%;\n  border-radius: 50%;\n}\n\n.media.media--hover-effect > img + img {\n  opacity: 0;\n}\n\n@include mq($large-up) {\n  .media--cropped {\n    padding-bottom: 63%;\n  }\n}\n\ndeferred-media {\n  display: block;\n}\n\n\n\n\n\n.ratio {\n  display: flex;\n  position: relative;\n  align-items: stretch;\n}\n\n.ratio::before {\n  content: '';\n  width: 0;\n  height: 0;\n  padding-bottom: var(--ratio-percent);\n}\n\n\n\n.global-media-settings {\n  position: relative;\n  border: var(--media-border-width) solid rgba(var(--color-foreground), var(--media-border-opacity));\n  border-radius: var(--media-radius);\n  overflow: visible !important;\n  background-color: rgb(var(--color-background));\n}\n\n.global-media-settings:after {\n  content: '';\n  position: absolute;\n  top: calc(var(--media-border-width) * -1);\n  right: calc(var(--media-border-width) * -1);\n  bottom: calc(var(--media-border-width) * -1);\n  left: calc(var(--media-border-width) * -1);\n  border-radius: var(--media-radius);\n  box-shadow: var(--media-shadow-horizontal-offset) var(--media-shadow-vertical-offset) var(--media-shadow-blur-radius) rgba(var(--color-shadow), var(--media-shadow-opacity));\n  z-index: -1;\n  pointer-events: none;\n}\n\n.global-media-settings--no-shadow {\n  overflow: hidden !important;\n}\n\n.global-media-settings--no-shadow:after {\n  content: none;\n}\n\n.global-media-settings img,\n.global-media-settings iframe,\n.global-media-settings model-viewer,\n.global-media-settings video {\n  border-radius: calc(var(--media-radius) - var(--media-border-width));\n}\n\n.content-container--full-width,\n.global-media-settings--full-width,\n.global-media-settings--full-width img {\n  border-radius: 0;\n  border-left: none;\n  border-right: none;\n}\n\n\n.image--outer,\n.image-content__image-container {\n  position: relative;\n  width: 100%;\n  margin: 0 auto;\n  overflow: hidden;\n  &.image--round {\n    border-radius: 150%;\n  }\n}\n.image--inner,\n.image-content__image-wrapper {\n  display: block;\n  margin: 0 auto;\n  img {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: center;\n  }\n  .no-js & {\n    @extend %visually-hidden;\n  }\n}\n\n\n.bg_image {\n  position: relative;\n  width: 100%;\n  margin: 0 auto;\n  img {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n}"]}