{"version":3,"sources":["component-cart-notification.scss","_mixins.scss"],"names":[],"mappings":"AAAA,2BACA,iBAAA,CAGA,8CACA,aAAA,CAGA,mBACA,qDAAA,CACA,oDAAA,CACA,uEAAA,CACA,kBAAA,CACA,0CAAA,CACA,qBAAA,CACA,iBAAA,CACA,OAAA,CACA,2BAAA,CACA,iBAAA,CACA,UAAA,CACA,2KAAA,CACA,UAAA,CAGA,2BACA,0NAAA,CAIA,iCACA,0NAAA,CCwCM,0CDnCN,yFACA,0CAAA,CAGA,mBACA,kEAAA,CACA,iBAAA,CACA,YAAA,CAAA,CC4BM,0CDvBN,8DACA,UAAA,CAAA,CAIA,2BACA,wFAAA,CAIA,0BACA,uBAAA,CACA,+DAAA,CACA,kBAAA,CAGA,2BACA,sBAAA,CACA,YAAA,CAGA,4BACA,kBAAA,CACA,YAAA,CACA,WAAA,CACA,eAAA,CACA,YAAA,CAGA,4CACA,kCAAA,CACA,iBAAA,CACA,YAAA,CAGA,0BACA,gBAAA,CACA,kBAAA,CAGA,0BACA,iBAAA,CAGA,4BACA,eAAA,CAGA,2BACA,sBAAA,CACA,YAAA,CACA,mBAAA,CACA,gBAAA,CAGA,8BACA,eAAA,CACA,YAAA,CAGA,kCACA,mBAAA,CACA,mBAAA,CACA,gBAAA,CAGA,wCACA,YAAA,CAGA,iCACA,mBAAA,CACA,YAAA","file":"component-cart-notification.css","sourcesContent":["@import '../assets/mixins';.cart-notification-wrapper {\n  position: relative;\n}\n\n.cart-notification-wrapper .cart-notification {\n  display: block;\n}\n\n.cart-notification {\n  border-bottom-right-radius: var(--popup-corner-radius);\n  border-bottom-left-radius: var(--popup-corner-radius);\n  border-color: rgba(var(--color-foreground), var(--popup-border-opacity));\n  border-style: solid;\n  border-width: 0 0 var(--popup-border-width);\n  padding: 2.5rem 3.5rem;\n  position: absolute;\n  right: 0;\n  transform: translateY(-100%);\n  visibility: hidden;\n  width: 100%;\n  box-shadow: var(--popup-shadow-horizontal-offset) var(--popup-shadow-vertical-offset) var(--popup-shadow-blur-radius) rgba(var(--color-shadow), var(--popup-shadow-opacity));\n  z-index: -1;\n}\n\n.cart-notification.focused {\n  box-shadow: 0 0 .2rem 0 rgba(var(--color-foreground), .3),\n  var(--popup-shadow-horizontal-offset) var(--popup-shadow-vertical-offset) var(--popup-shadow-blur-radius) rgba(var(--color-shadow), var(--popup-shadow-opacity));\n}\n\n.cart-notification:focus-visible {\n  box-shadow: 0 0 .2rem 0 rgba(var(--color-foreground), .3),\n  var(--popup-shadow-horizontal-offset) var(--popup-shadow-vertical-offset) var(--popup-shadow-blur-radius) rgba(var(--color-shadow), var(--popup-shadow-opacity));\n}\n\n@include mq($medium-up) {\n  .header-wrapper:not(.header-wrapper--border-bottom) + cart-notification .cart-notification {\n    border-top-width: var(--popup-border-width);\n  }\n\n  .cart-notification {\n    border-width: 0 var(--popup-border-width) var(--popup-border-width);\n    max-width: 36.8rem;\n    right: 2.2rem;\n  }\n}\n\n@include mq($large-up) {\n  .cart-notification-wrapper:is(.page-width) > .cart-notification {\n    right: 4rem;\n  }\n}\n\n.cart-notification.animate {\n  transition: transform var(--duration-short) ease,\n    visibility 0s var(--duration-short) ease;\n}\n\n.cart-notification.active {\n  transform: translateY(0);\n  transition: transform var(--duration-default) ease, visibility 0s;\n  visibility: visible;\n}\n\n.cart-notification__header {\n  align-items: flex-start;\n  display: flex;\n}\n\n.cart-notification__heading {\n  align-items: center;\n  display: flex;\n  flex-grow: 1;\n  margin-bottom: 0;\n  margin-top: 0;\n}\n\n.cart-notification__heading .icon-checkmark {\n  color: rgb(var(--color-foreground));\n  margin-right: 1rem;\n  width: 1.3rem;\n}\n\n.cart-notification__close {\n  margin-top: -2rem;\n  margin-right: -3rem;\n}\n\n.cart-notification__links {\n  text-align: center;\n}\n\n.cart-notification__links > * {\n  margin-top: 1rem;\n}\n\n.cart-notification-product {\n  align-items: flex-start;\n  display: flex;\n  padding-bottom: 3rem;\n  padding-top: 2rem;\n}\n\n.cart-notification-product dl {\n  margin-bottom: 0;\n  margin-top: 0;\n}\n\n.cart-notification-product__image {\n  display: inline-flex;\n  margin-right: 1.5rem;\n  margin-top: 0.5rem;\n}\n\n.cart-notification-product__image:after {\n  content: none;\n}\n\n.cart-notification-product__name {\n  margin-bottom: 0.5rem;\n  margin-top: 0;\n}\n","/*============================================================================\n  Grid Breakpoints and Class Names\n    - Do not change the variable names\n    - $grid-narrow is based on a Shopify breakpoint for checkout buttons\n==============================================================================*/\n$grid-narrow: 400px;\n$grid-medium: 750px;\n$grid-large: 990px;\n$grid-ex-large:1200px;\n$grid-widescreen: 1400px;\n$grid-gutter: 30px;\n$grid-gutter-mobile: 22px;\n\n$narrowish: 'narrow';\n$narrow: 'narrow';\n$not-narrow: 'not-narrow';\n$small: 'small';\n$medium: 'medium';\n$medium-down: 'medium-down';\n$medium-up: 'medium-up';\n$large: 'large';\n$large-down: 'large-down';\n$large-up: 'large-up';\n$ex-large: 'ex-large';\n$ex-large-up: 'ex-large-up';\n$widescreen: 'widescreen';\n\n/*============================================================================\n  Generate breakpoint-specific column widths and push classes\n    - Default column widths: $grid-breakpoint-has-widths: ($small, $medium-up);\n    - Default is no push classes\n==============================================================================*/\n$grid-breakpoint-has-widths: ($narrow, $not-narrow, $small, $medium-up, $medium, $medium-down, $large, $large-up, $large-down, $ex-large, $ex-large-up);\n$grid-breakpoint-has-push: $grid-breakpoint-has-widths;\n\n\n\n/*============================================================================\n  #Grid\n==============================================================================*/\n\n// The `$grid-breakpoints` list is used to build our media queries.\n// You can use these in the mq mixin.\n$grid-breakpoints: (\n    $narrow '(max-width: #{$grid-narrow})',\n    $not-narrow '(min-width: #{$grid-narrow + 1}) and (max-width: #{$grid-medium - 1})',\n    $small '(max-width: #{$grid-medium - 1})',\n    $medium '(min-width: #{$grid-medium}) and (max-width: #{$grid-large - 1})',\n    $medium-down '(max-width: #{$grid-large - 1})',\n    $medium-up '(min-width: #{$grid-medium})',\n    $large '(min-width: #{$grid-large}) and (max-width: #{$grid-ex-large - 1})',\n    $large-down '(max-width: #{$grid-ex-large - 1})',\n    $large-up '(min-width: #{$grid-large})',\n    $ex-large '(min-width: #{$grid-ex-large}) and (max-width: #{$grid-widescreen - 1})',\n    $ex-large-up '(min-width: #{$grid-ex-large})',\n    $widescreen '(min-width: #{$grid-widescreen})'\n);\n\n\n\n@mixin mq($mq) {\n  $breakpoint-found: false;\n\n  @each $breakpoint in $grid-breakpoints {\n    $name: nth($breakpoint, 1);\n    $declaration: nth($breakpoint, 2);\n\n    @if $mq == $name and $declaration {\n      $breakpoint-found: true;\n\n      @media only screen and #{$declaration} {\n        @content;\n      }\n    }\n  }\n\n  @if $breakpoint-found == false {\n    @warn 'Breakpoint \"#{$mq}\" does not exist';\n  }\n}\n\n\n// scss doesn't like min() and max(), so use these mixins to fix\n@function css-function( $function, $values... ) {\n  @return \n    $function\n    + unquote( '(' )\n    + $values\n    + unquote( ')' )\n  ;\n}\n\n@function css-min( $values... ) {\n  @return css-function( min, $values );\n}\n\n@function css-max( $values... ) {\n  @return css-function( max, $values );\n}\n\n\n@mixin prefix($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix==webkit {\n      -webkit-#{$property}: $value;\n    }\n\n    @else if $prefix==moz {\n      -moz-#{$property}: $value;\n    }\n\n    @else if $prefix==ms {\n      -ms-#{$property}: $value;\n    }\n\n    @else if $prefix==o {\n      -o-#{$property}: $value;\n    }\n\n    @else if $prefix==spec {\n      #{$property}: $value;\n    }\n\n    @else {\n      @warn 'unrecognized prefix: #{$prefix}';\n    }\n  }\n}\n\n\n%u-sr-only,\n%visually-hidden {\n  position: absolute !important;\n  overflow: hidden;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n  clip: rect(0 0 0 0);\n  word-wrap: normal !important;\n}\n\n\n@mixin placeholder-text {\n  &::-webkit-input-placeholder {\n      @content;\n  }\n  &::-moz-placeholder {\n      @content;\n  }\n  &::-o-placeholder {\n      @content;\n  }\n  &::-ms-input-placeholder {\n      @content;\n  }\n}"]}