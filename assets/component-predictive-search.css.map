{"version":3,"sources":["component-predictive-search.css"],"names":[],"mappings":"AAAA,mBACA,YAAA,CACA,iBAAA,CACA,uBAAA,CACA,YAAA,CACA,sCAAA,CACA,kBAAA,CACA,uEAAA,CACA,6CAAA,CACA,SAAA,CACA,qDAAA,CACA,oDAAA,CACA,2KAAA,CAGA,eAAA,CACA,gCAAA,CAGA,oCACA,SAAA,CACA,yBAAA,CAGA,2CACA,YAAA,CACA,6DAAA,CACA,mBAAA,CC2CM,0CDvCN,2BACA,OAAA,CACA,MAAA,CACA,QAAA,CAGA,2CACA,qBAAA,CAGA,2GAMA,QAAA,CAAA,CCuBM,0CDlBN,mBACA,eAAA,CACA,yBAAA,CAGA,0BACA,iBAAA,CAAA,CAIA,yFAEA,aAAA,CAGA,iCACA,YAAA,CACA,qBAAA,CACA,aAAA,CACA,QAAA,CAGA,+EACA,YAAA,CCLM,0CDSN,oLAIA,YAAA,CAEA,+EAEA,eAAA,CAEA,6CACA,gBAAA,CAEA,iJAGA,WAAA,CAAA,CAIA,4BACA,6DAAA,CACA,aAAA,CACA,uBAAA,CACA,wCAAA,CAGA,2BACA,YAAA,CACA,aAAA,CACA,aAAA,CAGA,uIAEA,YAAA,CAGA,6DACA,YAAA,CACA,sBAAA,CACA,YAAA,CAGA,iEACA,YAAA,CAGA,wGAGA,YAAA,CAGA,4GAGA,eAAA,CAGA,sKAIA,kCAAA,CACA,oDAAA,CAGA,wJAGA,yBAAA,CACA,2BAAA,CAGA,yBACA,YAAA,CACA,iBAAA,CACA,eAAA,CACA,oBAAA,CACA,UAAA,CAGA,8CACA,YAAA,CACA,8BAAA,CACA,oBAAA,CACA,mDAAA,CAGA,iCACA,yBAAA,CACA,YAAA,CACA,qBAAA,CAGA,2CACA,sBAAA,CAGA,gCACA,eAAA,CAGA,iCACA,QAAA,CAGA,kDACA,kBAAA,CAGA,2CACA,yCAAA,CAGA,2CACA,4BAAA,CAGA,gCACA,wCAAA,CACA,gBAAA,CAGA,2FAEA,gBAAA,CAGA,+BACA,6BAAA,CACA,kBAAA,CACA,mBAAA,CACA,oBAAA,CACA,kDAAA,CChJM,0CDoJN,+BACA,gBAAA,CACA,mBAAA,CAAA,CAIA,2CACA,8CAAA,CACA,+CAAA,CACA,aAAA,CACA,kDAAA,CACA,4BAAA,CAGA,0BACA,uBAAA,CACA,qBAAA,CAAA,kBAAA,CACA,iCAAA","file":"component-predictive-search.css","sourcesContent":["@import '../assets/mixins';.predictive-search {\n  display: none;\n  position: absolute;\n  top: calc(100% + 0.1rem);\n  left: -0.1rem;\n  border-width: var(--popup-border-width);\n  border-style: solid;\n  border-color: rgba(var(--color-foreground), var(--popup-border-opacity));\n  background-color: rgb(var(--color-background));\n  z-index: 3;\n  border-bottom-right-radius: var(--popup-corner-radius);\n  border-bottom-left-radius: var(--popup-corner-radius);\n  box-shadow: var(--popup-shadow-horizontal-offset)\n    var(--popup-shadow-vertical-offset) var(--popup-shadow-blur-radius)\n    rgba(var(--color-shadow), var(--popup-shadow-opacity));\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n}\n\n.predictive-search--search-template {\n  z-index: 2;\n  width: calc(100% + 0.2rem);\n}\n\n.predictive-search__results-groups-wrapper {\n  display: flex;\n  border-bottom: 0.1rem solid rgba(var(--color-foreground), 0.08);\n  padding-bottom: 1rem;\n}\n\n@include mq($small) {\n  .predictive-search--header {\n    right: 0;\n    left: 0;\n    top: 100%;\n  }\n\n  .predictive-search__results-groups-wrapper {\n    flex-direction: column;\n  }\n\n  .predictive-search__results-groups-wrapper:not(\n      .predictive-search__results-groups-wrapper--no-suggestions\n    ) {\n    /* On mobile, when there are no suggestions the first .predictive-search__results-groups-wrapper\n     * is virtually empty due to a display: hidden on the predictive-search__pages-wrapper child.\n     * This causes the gap to render and look like a big top margin */\n    gap: 2rem;\n  }\n}\n\n@include mq($medium-up) {\n  .predictive-search {\n    border-top: none;\n    width: calc(100% + 0.2rem);\n  }\n\n  .header predictive-search {\n    position: relative;\n  }\n}\n\npredictive-search[open] .predictive-search,\npredictive-search[loading] .predictive-search {\n  display: block;\n}\n\n.predictive-search__result-group {\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  gap: 2rem;\n}\n\n.predictive-search__result-group:first-child .predictive-search__pages-wrapper {\n  display: none;\n}\n\n@include mq($medium-up) {\n  .predictive-search__results-groups-wrapper--no-products\n    .predictive-search__result-group:nth-child(2),\n  .predictive-search__result-group:last-child\n    .predictive-search__pages-wrapper {\n    display: none;\n  }\n  .predictive-search__result-group:first-child\n    .predictive-search__pages-wrapper {\n    display: initial;\n  }\n  .predictive-search__result-group:first-child {\n    flex: 0 0 26.4rem;\n  }\n  .predictive-search__results-groups-wrapper--no-products\n    .predictive-search__result-group:first-child,\n  .predictive-search__result-group:only-child {\n    flex-grow: 1;\n  }\n}\n\n.predictive-search__heading {\n  border-bottom: 0.1rem solid rgba(var(--color-foreground), 0.08);\n  margin: 0 2rem;\n  padding: 1.5rem 0 0.75rem;\n  color: rgba(var(--color-foreground), 0.7);\n}\n\npredictive-search .spinner {\n  width: 1.5rem;\n  height: 1.5rem;\n  line-height: 0;\n}\n\npredictive-search:not([loading]) .predictive-search__loading-state,\npredictive-search:not([loading]) .predictive-search-status__loading {\n  display: none;\n}\n\npredictive-search[loading] .predictive-search__loading-state {\n  display: flex;\n  justify-content: center;\n  padding: 1rem;\n}\n\npredictive-search[loading] .predictive-search__search-for-button {\n  display: none;\n}\n\npredictive-search[loading]\n  .predictive-search__results-groups-wrapper\n  ~ .predictive-search__loading-state {\n  display: none;\n}\n\npredictive-search[loading]\n  .predictive-search__results-groups-wrapper\n  ~ .predictive-search__search-for-button {\n  display: initial;\n}\n\n.predictive-search__list-item[aria-selected=\"true\"] > *,\n.predictive-search__list-item:hover > *,\n.predictive-search__item[aria-selected=\"true\"],\n.predictive-search__item:hover {\n  color: rgb(var(--color-foreground));\n  background-color: rgba(var(--color-foreground), 0.04);\n}\n\n.predictive-search__list-item[aria-selected=\"true\"]\n  .predictive-search__item-heading,\n.predictive-search__list-item:hover .predictive-search__item-heading {\n  text-decoration: underline;\n  text-underline-offset: 0.3rem;\n}\n\n.predictive-search__item {\n  display: flex;\n  padding: 1rem 2rem;\n  text-align: left;\n  text-decoration: none;\n  width: 100%;\n}\n\n.predictive-search__item--link-with-thumbnail {\n  display: grid;\n  grid-template-columns: 5rem 1fr;\n  grid-column-gap: 2rem;\n  grid-template-areas: \"product-image product-content\";\n}\n\n.predictive-search__item-content {\n  grid-area: product-content;\n  display: flex;\n  flex-direction: column;\n}\n\n.predictive-search__item-content--centered {\n  justify-content: center;\n}\n\n.predictive-search__item-vendor {\n  font-size: 0.9rem;\n}\n\n.predictive-search__item-heading {\n  margin: 0;\n}\n\n.predictive-search__item-query-result *:not(mark) {\n  font-weight: bolder;\n}\n\n.predictive-search__item-query-result mark {\n  color: rgba(var(--color-foreground), 0.75);\n}\n\n.predictive-search__item-query-result mark {\n  background-color: transparent;\n}\n\n.predictive-search__item .price {\n  color: rgba(var(--color-foreground), 0.7);\n  font-size: 1.2rem;\n}\n\n.predictive-search__item-vendor + .predictive-search__item-heading,\n.predictive-search .price {\n  margin-top: 0.5rem;\n}\n\n.predictive-search__item--term {\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.3rem 2rem;\n  word-break: break-all;\n  line-height: calc(1 + 0.4 / var(--font-body-scale));\n}\n\n@include mq($medium-up) {\n  .predictive-search__item--term {\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n  }\n}\n\n.predictive-search__item--term .icon-arrow {\n  width: calc(var(--font-heading-scale) * 1.4rem);\n  height: calc(var(--font-heading-scale) * 1.4rem);\n  flex-shrink: 0;\n  margin-left: calc(var(--font-heading-scale) * 2rem);\n  color: rgb(var(--color-link));\n}\n\n.predictive-search__image {\n  grid-area: product-image;\n  object-fit: contain;\n  font-family: \"object-fit: contain\";\n}\n","/*============================================================================\n  Grid Breakpoints and Class Names\n    - Do not change the variable names\n    - $grid-narrow is based on a Shopify breakpoint for checkout buttons\n==============================================================================*/\n$grid-narrow: 400px;\n$grid-medium: 750px;\n$grid-large: 990px;\n$grid-ex-large:1200px;\n$grid-widescreen: 1400px;\n$grid-gutter: 30px;\n$grid-gutter-mobile: 22px;\n\n$narrowish: 'narrow';\n$narrow: 'narrow';\n$not-narrow: 'not-narrow';\n$small: 'small';\n$medium: 'medium';\n$medium-down: 'medium-down';\n$medium-up: 'medium-up';\n$large: 'large';\n$large-down: 'large-down';\n$large-up: 'large-up';\n$ex-large: 'ex-large';\n$ex-large-up: 'ex-large-up';\n$widescreen: 'widescreen';\n\n/*============================================================================\n  Generate breakpoint-specific column widths and push classes\n    - Default column widths: $grid-breakpoint-has-widths: ($small, $medium-up);\n    - Default is no push classes\n==============================================================================*/\n$grid-breakpoint-has-widths: ($narrow, $not-narrow, $small, $medium-up, $medium, $medium-down, $large, $large-up, $large-down, $ex-large, $ex-large-up);\n$grid-breakpoint-has-push: $grid-breakpoint-has-widths;\n\n\n\n/*============================================================================\n  #Grid\n==============================================================================*/\n\n// The `$grid-breakpoints` list is used to build our media queries.\n// You can use these in the mq mixin.\n$grid-breakpoints: (\n    $narrow '(max-width: #{$grid-narrow})',\n    $not-narrow '(min-width: #{$grid-narrow + 1}) and (max-width: #{$grid-medium - 1})',\n    $small '(max-width: #{$grid-medium - 1})',\n    $medium '(min-width: #{$grid-medium}) and (max-width: #{$grid-large - 1})',\n    $medium-down '(max-width: #{$grid-large - 1})',\n    $medium-up '(min-width: #{$grid-medium})',\n    $large '(min-width: #{$grid-large}) and (max-width: #{$grid-ex-large - 1})',\n    $large-down '(max-width: #{$grid-ex-large - 1})',\n    $large-up '(min-width: #{$grid-large})',\n    $ex-large '(min-width: #{$grid-ex-large}) and (max-width: #{$grid-widescreen - 1})',\n    $ex-large-up '(min-width: #{$grid-ex-large})',\n    $widescreen '(min-width: #{$grid-widescreen})'\n);\n\n\n\n@mixin mq($mq) {\n  $breakpoint-found: false;\n\n  @each $breakpoint in $grid-breakpoints {\n    $name: nth($breakpoint, 1);\n    $declaration: nth($breakpoint, 2);\n\n    @if $mq == $name and $declaration {\n      $breakpoint-found: true;\n\n      @media only screen and #{$declaration} {\n        @content;\n      }\n    }\n  }\n\n  @if $breakpoint-found == false {\n    @warn 'Breakpoint \"#{$mq}\" does not exist';\n  }\n}\n\n\n// scss doesn't like min() and max(), so use these mixins to fix\n@function css-function( $function, $values... ) {\n  @return \n    $function\n    + unquote( '(' )\n    + $values\n    + unquote( ')' )\n  ;\n}\n\n@function css-min( $values... ) {\n  @return css-function( min, $values );\n}\n\n@function css-max( $values... ) {\n  @return css-function( max, $values );\n}\n\n\n@mixin prefix($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix==webkit {\n      -webkit-#{$property}: $value;\n    }\n\n    @else if $prefix==moz {\n      -moz-#{$property}: $value;\n    }\n\n    @else if $prefix==ms {\n      -ms-#{$property}: $value;\n    }\n\n    @else if $prefix==o {\n      -o-#{$property}: $value;\n    }\n\n    @else if $prefix==spec {\n      #{$property}: $value;\n    }\n\n    @else {\n      @warn 'unrecognized prefix: #{$prefix}';\n    }\n  }\n}\n\n\n%u-sr-only,\n%visually-hidden {\n  position: absolute !important;\n  overflow: hidden;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n  clip: rect(0 0 0 0);\n  word-wrap: normal !important;\n}\n\n\n@mixin placeholder-text {\n  &::-webkit-input-placeholder {\n      @content;\n  }\n  &::-moz-placeholder {\n      @content;\n  }\n  &::-o-placeholder {\n      @content;\n  }\n  &::-ms-input-placeholder {\n      @content;\n  }\n}"]}