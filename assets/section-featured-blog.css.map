{"version":3,"sources":["section-featured-blog.css"],"names":[],"mappings":"AAAA,kBACA,eAAA,CACA,uCAAA,CCoEM,0CDhEN,kBACA,iBAAA,CACA,SAAA,CACA,QAAA,CAAA,CAIA,2BACA,YAAA,CACA,8CAAA,CAGA,+BACA,iBAAA,CAGA,qBACA,QAAA,CAGA,6BACA,iBAAA,CACA,yCAAA,CC0CM,0CDtCN,kDACA,iBAAA,CAAA,CAIA,aACA,QAAA,CAGA,8BACA,kBAAA,CC4BM,0CDxBN,8BACA,eAAA,CAAA,CAIA,uCACA,uBAAA,CCkBM,0CDdN,oBACA,+DAAA,CAAA,CAIA,iDACA,6CAAA,CAGA,2BACA,UAAA,CAGA,cACA,eAAA,CAAA,0CAIA,cACA,eAAA,CAAA,CAKA,4BCVM,0CDYN,+BACA,kDAAA,CAAA,CAAA,CCbM,0CDwBN,6CACA,SAAA,CAAA","file":"section-featured-blog.css","sourcesContent":["@import '../assets/mixins';.blog-placeholder {\n  margin: 0 1.5rem;\n  background: rgb(var(--color-background));\n}\n\n@include mq($medium-up) {\n  .blog-placeholder {\n    text-align: center;\n    width: 50%;\n    margin: 0;\n  }\n}\n\n.blog-placeholder__content {\n  padding: 3rem;\n  background: rgba(var(--color-foreground), 0.04);\n}\n\n.blog-placeholder .placeholder {\n  position: relative;\n}\n\n.blog-placeholder h2 {\n  margin: 0;\n}\n\n.blog-placeholder .rte-width {\n  margin-top: 1.2rem;\n  color: rgba(var(--color-foreground), 0.75);\n}\n\n@include mq($large-up) {\n  .grid--1-col-desktop .article-card .card__content {\n    text-align: center;\n  }\n}\n\n.blog__title {\n  margin: 0;\n}\n\n.blog__posts.articles-wrapper {\n  margin-bottom: 1rem;\n}\n\n@include mq($large-up) {\n  .blog__posts.articles-wrapper {\n    margin-bottom: 0;\n  }\n}\n\n.blog__posts.articles-wrapper .article {\n  scroll-snap-align: start;\n}\n\n@include mq($small) {\n  .blog__post.article {\n    width: calc(100% - 3rem - var(--grid-mobile-horizontal-spacing));\n  }\n}\n\n.background-secondary .blog-placeholder__content {\n  background-color: rgb(var(--color-background));\n}\n\n.blog__posts .card-wrapper {\n  width: 100%;\n}\n\n.blog__button {\n  margin-top: 3rem;\n}\n\n@include mq($medium-up) {\n  .blog__button {\n    margin-top: 5rem;\n  }\n}\n\n/* check for flexbox gap in older Safari versions */\n@supports not (inset: 10px) {\n  @include mq($medium-up) {\n    .blog__posts .article + .article {\n      margin-left: var(--grid-desktop-horizontal-spacing);\n    }\n  }\n}\n\n\n\n\n.template--article {\n  .blog {\n    @include mq($medium-up) {\n      .page-width-desktop {\n        padding: 0;\n      }\n    }\n  }\n}","/*============================================================================\n  Grid Breakpoints and Class Names\n    - Do not change the variable names\n    - $grid-narrow is based on a Shopify breakpoint for checkout buttons\n==============================================================================*/\n$grid-narrow: 400px;\n$grid-medium: 750px;\n$grid-large: 990px;\n$grid-ex-large:1200px;\n$grid-widescreen: 1400px;\n$grid-gutter: 30px;\n$grid-gutter-mobile: 22px;\n\n$narrowish: 'narrow';\n$narrow: 'narrow';\n$not-narrow: 'not-narrow';\n$small: 'small';\n$medium: 'medium';\n$medium-down: 'medium-down';\n$medium-up: 'medium-up';\n$large: 'large';\n$large-down: 'large-down';\n$large-up: 'large-up';\n$ex-large: 'ex-large';\n$ex-large-up: 'ex-large-up';\n$widescreen: 'widescreen';\n\n/*============================================================================\n  Generate breakpoint-specific column widths and push classes\n    - Default column widths: $grid-breakpoint-has-widths: ($small, $medium-up);\n    - Default is no push classes\n==============================================================================*/\n$grid-breakpoint-has-widths: ($narrow, $not-narrow, $small, $medium-up, $medium, $medium-down, $large, $large-up, $large-down, $ex-large, $ex-large-up);\n$grid-breakpoint-has-push: $grid-breakpoint-has-widths;\n\n\n\n/*============================================================================\n  #Grid\n==============================================================================*/\n\n// The `$grid-breakpoints` list is used to build our media queries.\n// You can use these in the mq mixin.\n$grid-breakpoints: (\n    $narrow '(max-width: #{$grid-narrow})',\n    $not-narrow '(min-width: #{$grid-narrow + 1}) and (max-width: #{$grid-medium - 1})',\n    $small '(max-width: #{$grid-medium - 1})',\n    $medium '(min-width: #{$grid-medium}) and (max-width: #{$grid-large - 1})',\n    $medium-down '(max-width: #{$grid-large - 1})',\n    $medium-up '(min-width: #{$grid-medium})',\n    $large '(min-width: #{$grid-large}) and (max-width: #{$grid-ex-large - 1})',\n    $large-down '(max-width: #{$grid-ex-large - 1})',\n    $large-up '(min-width: #{$grid-large})',\n    $ex-large '(min-width: #{$grid-ex-large}) and (max-width: #{$grid-widescreen - 1})',\n    $ex-large-up '(min-width: #{$grid-ex-large})',\n    $widescreen '(min-width: #{$grid-widescreen})'\n);\n\n\n\n@mixin mq($mq) {\n  $breakpoint-found: false;\n\n  @each $breakpoint in $grid-breakpoints {\n    $name: nth($breakpoint, 1);\n    $declaration: nth($breakpoint, 2);\n\n    @if $mq == $name and $declaration {\n      $breakpoint-found: true;\n\n      @media only screen and #{$declaration} {\n        @content;\n      }\n    }\n  }\n\n  @if $breakpoint-found == false {\n    @warn 'Breakpoint \"#{$mq}\" does not exist';\n  }\n}\n\n\n// scss doesn't like min() and max(), so use these mixins to fix\n@function css-function( $function, $values... ) {\n  @return \n    $function\n    + unquote( '(' )\n    + $values\n    + unquote( ')' )\n  ;\n}\n\n@function css-min( $values... ) {\n  @return css-function( min, $values );\n}\n\n@function css-max( $values... ) {\n  @return css-function( max, $values );\n}\n\n\n@mixin prefix($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix==webkit {\n      -webkit-#{$property}: $value;\n    }\n\n    @else if $prefix==moz {\n      -moz-#{$property}: $value;\n    }\n\n    @else if $prefix==ms {\n      -ms-#{$property}: $value;\n    }\n\n    @else if $prefix==o {\n      -o-#{$property}: $value;\n    }\n\n    @else if $prefix==spec {\n      #{$property}: $value;\n    }\n\n    @else {\n      @warn 'unrecognized prefix: #{$prefix}';\n    }\n  }\n}\n\n\n%u-sr-only,\n%visually-hidden {\n  position: absolute !important;\n  overflow: hidden;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n  clip: rect(0 0 0 0);\n  word-wrap: normal !important;\n}\n\n\n@mixin placeholder-text {\n  ::-webkit-input-placeholder {\n      @content;\n  }\n  ::-moz-placeholder {\n      @content;\n  }\n  ::-o-placeholder {\n      @content;\n  }\n  ::-ms-input-placeholder {\n      @content;\n  }\n}"]}