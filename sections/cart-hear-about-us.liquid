{% comment %}
  "How did you hear about us?" dropdown for the cart page
  This saves the selected value as a cart attribute
	Vintage theme ref: https://help.shopify.com/en/manual/online-store/themes/themes-by-shopify/vintage-themes/customizing-vintage-themes/ask-how-customers-heard-about-your-store
{% endcomment %}
<div class='page-width'>
  <div class='cart__attribute hau'>
    <div class='select'>
      <select class='select__select' name='attributes[How did you hear about us?]' id='cart-attribute-referral'>
        <option
          value=''
          {% if cart.attributes['how-did-you-hear-about-us'] == '' %}
            selected
          {% endif %}
        >
          How did you hear about us?
        </option>
        {% assign options_array = settings.hau_form_options | split: ',' %}
        {% for o in options_array %}
          {% assign option = o | strip %}
          <option
            value='{{ option }}'
            {% if cart.attributes['how-did-you-hear-about-us'] == option %}
              selected
            {% endif %}
          >
            {{ option }}
          </option>
        {% endfor %}
        <option value='Other'>Other</option>
      </select>
      {% render 'icon-caret' %}
      <label for='cart-attribute-referral' hidden>How did you hear about us?*</label>
    </div>
    {% comment %}
      "Other" input field (hidden by default)
    {% endcomment %}
    <div class='field' id='other-input-container' style='display: none; margin-top: 10px;'>
      <input
        class='field__input'
        type='text'
        id='cart-attribute-other'
        name='attributes[Other Source]'
        placeholder='Enter source'
        value='{{ cart.attributes.how-did-you-hear-about-us-other }}'
      >
      <label class='field__label' for='cart-attribute-other'>Please specify:</label>
    </div>

    {% comment %}
      Error message placeholder
    {% endcomment %}
    <p id='cart-referral-error' style='display: none; margin-top: 5px; color: {{ settings.hau_error_color }};'>
      {{ settings.hau_error_message_other }}
    </p>
  </div>
</div>
{% comment %}
  If a user has already selected an option, pre-fill it
{% endcomment %}
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const referralSelect = document.getElementById('cart-attribute-referral')
    const otherInputContainer = document.getElementById('other-input-container')
    const otherInput = document.getElementById('cart-attribute-other')
    const checkoutButton = document.querySelector('[name="checkout"], [href$="/checkout"]')
    const errorMessage = document.getElementById('cart-referral-error')

    function updateCartAttributes() {
      let attributes = {
        'How did you hear about us?': referralSelect.value
      }

      if (referralSelect.value === 'Other' && otherInput.value.trim() !== '') {
        attributes['Other Source'] = otherInput.value.trim()
      } else {
        delete attributes['Other Source'] // Remove if empty
      }

      fetch('/cart/update.js', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ attributes })
      })
    }

    referralSelect.addEventListener('change', function () {
      if (referralSelect.value === 'Other') {
        otherInputContainer.style.display = 'block'
      } else {
        otherInputContainer.style.display = 'none'
        otherInput.value = '' // Clear input when hidden
      }
      errorMessage.style.display = 'none' // Hide error when a selection is made
      updateCartAttributes()
    })

    otherInput.addEventListener('input', function () {
      updateCartAttributes()
    })

    // Restore values when the page loads
    fetch('/cart.js')
      .then((response) => response.json())
      .then((data) => {
        if (data.attributes) {
          referralSelect.value = data.attributes['How did you hear about us?'] || ''
          if (referralSelect.value === 'Other') {
            otherInputContainer.style.display = 'block'
            otherInput.value = data.attributes['Other Source'] || ''
          }
        }
      })

    // Prevent checkout if no selection is made or if "Other" is selected but empty
		{% if settings.hau_form_validation %}
			if (checkoutButton) {
				checkoutButton.addEventListener('click', function (event) {
					if (referralSelect.value === '' || (referralSelect.value === 'Other' && otherInput.value.trim() === '')) {
						event.preventDefault()
						errorMessage.style.display = 'block'
						errorMessage.textContent =
							referralSelect.value === 'Other' ? '{{ settings.hau_error_message_other }}' : '{{ settings.hau_error_message }}'
						if (referralSelect.value === 'Other') {
							otherInput.focus()
						} else {
							referralSelect.focus()
						}
					}
				})
      }
    {% endif %}
  })
</script>
