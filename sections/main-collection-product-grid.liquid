<!-- sections/main-collection-product-grid -->

{% liquid
  if section.settings.collection != '' and section.settings.collection != blank
    assign collection = collections[section.settings.collection]
  endif
  assign is_samples = false
  ## assign single_variant_quick_add = blank
  ## if request.path == "/collections/pavers/_Samples"
  ##   assign is_samples = true
  ##   assign collection = collections['pavers']
  ##   assign single_variant_quick_add = 'sample'
  ## endif    
  
  if section.settings.alternate_product_card != ''
    assign currentTags = section.settings.alternate_product_card | split: ", "
    assign single_variant_quick_add = blank
    for tag in currentTags
      if current_tags contains tag
        ## old
        assign is_samples = true
        assign collection = collections['pavers']
        assign single_variant_quick_add = 'sample'
      endif
    endfor
  endif
%}


{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}

{%- if section.settings.enable_quick_add -%}
  {{ 'quick-add.css' | asset_url | stylesheet_tag }}
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}
    px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}
    px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}
      px;
      padding-bottom: {{ section.settings.padding_bottom }}
      px;
    }
  }
{%- endstyle -%}

{% comment %} {% if is_samples %}
  {{ 'collection-pavers.css' | asset_url | stylesheet_tag }}
{% endif %} {% endcomment %}

{% if collection %}
  <div class="section-{{ section.id }}-padding">
    {%- paginate collection.products by section.settings.products_per_page -%}
        <div class="{% if section.settings.filter_type == 'vertical' %} facets-vertical page-width{% endif %}">
        {% unless is_samples %}
          <div class="feed--view-type">
            <span>View:
            </span>
            <a
              href="#images"
              data-type="images"
              class="current">Images</a>,
            <a href="#list" data-type="list">List</a>
          </div>
        {% endunless %}


        <div class="product-grid-container" id="ProductGridContainer">
          {%- if collection.products.size == 0 -%}
            <div
              class="collection collection--empty page-width"
              id="product-grid"
              data-id="{{ section.id }}">
              <div class="loading-overlay gradient"></div>
              <div class="title-wrapper center">
                <h2 class="title title--primary">
                  {{ 'sections.collection_template.empty' | t -}}
                  <br>
                  {{
                     'sections.collection_template.use_fewer_filters_html'
                   | t: link: collection.url, class: 'underlined-link link' }}
                </h2>
              </div>
            </div>
          {%- else -%}
            <div class="collection{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}">
              <div class="loading-overlay gradient"></div>

              <ul
                id="product-grid"
                data-id="{{ section.id }}"
                class="grid feed-view product-grid grid--{{ section.settings.columns_mobile }}-col-tablet-down grid--{{ section.settings.columns_desktop }}-col-desktop">
                {% assign index = 0 %}
                {% assign filterTag = section.settings.filter_on_tag %}
                {% assign includeOnlyVariantName = section.settings.filter_variant %}
                {%- for product in collection.products -%}
                  {% assign lazy_load = false %}
                  {% assign product_expanded = false %}
                  {%- if forloop.index > 2 -%}
                    {%- assign lazy_load = true -%}
                  {%- endif -%}
                  {% assign displayed_variants = '' %}
                  {% for tag in product.tags %}
                    {% if tag contains 'expand-' %}
                      {% liquid
                        assign split_option = tag | split: "-" | last | capitalize
                        assign option_variants = product.options_with_values | where: 'name', split_option | first
                        assign option_pos = 'option'

                        for opt in product.options
                          if opt == split_option
                            assign option_pos = option_pos | append: forloop.index
                          endif
                        endfor
                      %}

                      {% for option_variant in option_variants.values %}

                        {% assign filtered_prods = product.variants | where: option_pos, option_variant%}
                        
                        {% for p in filtered_prods %}

                          {% liquid
                            if is_samples
                              if displayed_variants contains p.id
                                continue
                              endif
                              unless p.options contains 'Sample' 
                                continue
                              endunless
                            else
                              if displayed_variants contains p.id or p.options contains 'Sample'
                                continue
                              endif
                            endif

                            assign displayed_variants = displayed_variants | append: ' ' | append: p.id
                            assign prod_title = product.title
                            
                            if split_option == 'Size' and p.option2 != blank
                              if option_pos == 'option1'
                                assign prod_title = prod_title | append: ' in ' | append: p.option2 
                              else
                                assign prod_title = prod_title | append: ' in ' | append: p.option1
                              endif
                            else
                              assign prod_title = prod_title | append: ' in ' | append: option_variant
                            endif
                          %}
                          {% comment %} 
                            if filter tag page (filterTag is set in the customizer's "Filter on tag name" input) 
                            exclude variants that are not includeOnlyVariantName 
                            (includeOnlyVariantName is set in the customizer's "Filter by variant name" input) 
                          {% endcomment %}
                          {%- assign variant_values = p.options | join: ' ' -%}
                          {% if request.path contains filterTag %}
                            {%- unless variant_values contains includeOnlyVariantName -%}
                              {%- continue -%}
                            {%- endunless -%}
                          {% endif %}
                          <li class="grid__item" {% if p.metafields.custom.group != blank %}data-group={{p.metafields.custom.group}}{% endif %}>
                            {% render 'card-product', 
                              product_title: prod_title,
                              card_product: p,
                              hide_overlay_link: is_samples,
                              media_aspect_ratio: section.settings.image_ratio,
                              show_secondary_image: section.settings.show_secondary_image,
                              show_vendor: section.settings.show_vendor,
                              show_rating: section.settings.show_rating,
                              lazy_load: lazy_load,
                              show_quick_add: section.settings.enable_quick_add,
                              single_variant_quick_add: single_variant_quick_add,
                              section_id: section.id 
                            %}
                          </li>
                          {% assign index = index | plus: 1 %}
                          {% assign remainder = index | modulo: 7 %}
                          {% if index > 0 and remainder == 0 and is_samples %}
                            <!-- <li class="grid__item"></li> -->
                          {% endif %}
                        {% endfor %}
                      {% endfor %}
                      {% assign product_expanded = true %}
                    {% endif %}                  
                  {% endfor %}
                  {% unless product_expanded %}
                    <li class="grid__item">
                      {% render 'card-product', 
                        card_product: product,
                        is_samples: is_samples,
                        hide_overlay_link: is_samples,
                        media_aspect_ratio: section.settings.image_ratio,
                        show_secondary_image: section.settings.show_secondary_image,
                        show_vendor: section.settings.show_vendor,
                        show_rating: section.settings.show_rating,
                        lazy_load: lazy_load,
                        show_quick_add: section.settings.enable_quick_add,
                        single_variant_quick_add: single_variant_quick_add,
                        section_id: section.id 
                      %}
                    </li>
                    {% assign index = index | plus: 1 %}
                    {% assign remainder = index | modulo: 7 %}
                    {% if index > 0 and remainder == 0 and is_samples %}
                      <!-- <li class="grid__item"></li> -->
                    {% endif %}
                  {% endunless %}
                {%- endfor -%}
              </ul>

              {%- if paginate.pages > 1 -%}
                {% render 'pagination', paginate: paginate, anchor: '' %}
              {%- endif -%}
            </div>
          {%- endif -%}
        </div>
      </div>
    {%- endpaginate -%}
  </div>
  <script>
    // return
    // //Doing grouping in Javascript coz it easier ^-^
    // const groupProducts = document.querySelectorAll('[data-group]')
    // const groups = new Map()

    // groupProducts.forEach(productEl =>{
    //   const group = productEl.getAttribute('data-group')
    //   if (groups.has(group)) {
    //     groups.get(group).push(productEl)
    //   } else {
    //     groups.set(group,[productEl])
    //   }
    // })
    
    // groups.forEach((els,group)=>{
    //   els[0].after(...els.slice(1))
    // })


    // const isSamples = '{{is_samples}}'
    
    // if (groups.size > 0 && isSamples == 'true'){
    //   //Re add the pattern seen in the Samples page, to compensate for grouping
    //   const products = document.querySelectorAll('#product-grid > li')
      
    //   for(let i=6;i<products.length;i+=7) {
    //     products[i]?.insertAdjacentHTML("afterend",'<li class="grid__item"></li>')
    //   }
    // }

  </script>
{% endif %}

{% schema %}
  {
    "name": "t:sections.main-collection-product-grid.name",
    "class": "section collection-product-grid",
    "settings": [
      {
        "type": "range",
        "id": "products_per_page",
        "min": 8,
        "max": 50,
        "step": 1,
        "default": 16,
        "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
      },
      {
        "type": "range",
        "id": "columns_desktop",
        "min": 1,
        "max": 5,
        "step": 1,
        "default": 4,
        "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
      },
      {
        "type": "header",
        "content": "Filter by variant"
      },
      {
        "type": "text",
        "id": "filter_on_tag",
        "label": "Filter on tag name",
        "info": "Variant filter will only apply to this tag of products."
      },
      {
        "type": "text",
        "id": "filter_variant",
        "label": "Filter by variant name",
        "info": "This variant name will be the only products shown."
      },
      {
        "type": "header",
        "content": "t:sections.main-collection-product-grid.settings.header__3.content"
      },
      {
        "type": "text",
        "id": "alternate_product_card",
        "label": "Tag pages alternate product card",
        "info": "Enter comma separated tag names here."
      },
      {
        "type": "select",
        "id": "image_ratio",
        "options": [
          {
            "value": "adapt",
            "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
          }, {
            "value": "portrait",
            "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
          }, {
            "value": "square",
            "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
          }
        ],
        "default": "adapt",
        "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
      }, {
        "type": "checkbox",
        "id": "show_secondary_image",
        "default": false,
        "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
      }, {
        "type": "checkbox",
        "id": "show_vendor",
        "default": false,
        "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
      }, {
        "type": "checkbox",
        "id": "show_rating",
        "default": false,
        "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
        "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
      }, {
        "type": "checkbox",
        "id": "enable_quick_add",
        "default": false,
        "label": "t:sections.main-collection-product-grid.settings.enable_quick_buy.label"
      }, {
        "type": "header",
        "content": "t:sections.main-collection-product-grid.settings.header__1.content"
      }, {
        "type": "checkbox",
        "id": "enable_filtering",
        "default": true,
        "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
        "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
      }, {
        "type": "select",
        "id": "filter_type",
        "options": [
          {
            "value": "horizontal",
            "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
          }, {
            "value": "vertical",
            "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
          }, {
            "value": "drawer",
            "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
          }
        ],
        "default": "horizontal",
        "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
        "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
      }, {
        "type": "checkbox",
        "id": "enable_sorting",
        "default": true,
        "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
      }, {
        "type": "header",
        "content": "t:sections.main-collection-product-grid.settings.header_mobile.content"
      }, {
        "type": "select",
        "id": "columns_mobile",
        "default": "2",
        "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
        "options": [
          {
            "value": "1",
            "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
          }, {
            "value": "2",
            "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
          }
        ]
      }, {
        "type": "header",
        "content": "t:sections.all.padding.section_padding_heading"
      }, {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_top",
        "default": 36
      }, {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 36
      }, {
        "type": "liquid",
        "id": "collection",
        "label": "Collection Override"
      }
    ],
    "presets": [
      {
        "name": "t:sections.main-collection-product-grid.name"
      }
    ]
  }
{% endschema %}